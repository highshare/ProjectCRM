2018-03-12 12:38:32 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 3950 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 12:38:32 - No active profile set, falling back to default profiles: default
2018-03-12 12:38:33 - HV000001: Hibernate Validator 5.3.6.Final
2018-03-12 12:38:33 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53f0837b: startup date [Mon Mar 12 12:38:33 CET 2018]; root of context hierarchy
2018-03-12 12:38:36 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 12:38:37 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ba34c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 12:38:39 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 12:38:39 - Starting service [Tomcat]
2018-03-12 12:38:39 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 12:38:39 - Initializing Spring embedded WebApplicationContext
2018-03-12 12:38:39 - Root WebApplicationContext: initialization completed in 5895 ms
2018-03-12 12:38:39 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 12:38:39 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 12:38:40 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 12:38:41 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 12:38:41 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 12:38:41 - HHH000412: Hibernate Core {5.0.12.Final}
2018-03-12 12:38:41 - HHH000206: hibernate.properties not found
2018-03-12 12:38:41 - HHH000021: Bytecode provider name : javassist
2018-03-12 12:38:41 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-03-12 12:38:42 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 12:38:43 - HHH000227: Running hbm2ddl schema export
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 12:38:43 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 12:38:43 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 12:38:43 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 12:38:43 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 12:38:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 12:38:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 12:38:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 12:38:43 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 12:38:43 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 12:38:43 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 12:38:43 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 12:38:43 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 12:38:43 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 12:38:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 12:38:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 12:38:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 12:38:43 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:38:43 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 12:38:43 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:39:09 - HHH000230: Schema export complete
2018-03-12 12:39:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 12:39:10 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 12:39:13 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2199 ms.
2018-03-12 12:39:15 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 12:39:15 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 12:39:15 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 12:39:15 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 12:39:15 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 12:39:15 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 12:39:15 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 12:39:15 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 12:39:15 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 12:39:15 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 12:39:15 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 12:39:15 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 12:39:15 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 12:39:15 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 12:39:15 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 12:39:15 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 12:39:15 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 12:39:15 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 12:39:15 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 12:39:15 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 12:39:15 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 12:39:15 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:39:15 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 12:39:15 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 12:39:15 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:39:15 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 12:39:15 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 12:39:15 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:39:15 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:39:15 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 12:39:15 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 12:39:15 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 12:39:15 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 12:39:15 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 12:39:15 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 12:39:15 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 12:39:15 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 12:39:15 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 12:39:15 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 12:39:15 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 12:39:15 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 12:39:15 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 12:39:15 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 12:39:15 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 12:39:15 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 12:39:15 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 12:39:16 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 12:39:16 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 12:39:16 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 12:39:16 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 12:39:16 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 12:39:16 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 12:39:16 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 12:39:16 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 12:39:16 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:16 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 12:39:16 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 12:39:16 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:39:18 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5888b7ca, org.springframework.security.web.context.SecurityContextPersistenceFilter@d8b6e0d, org.springframework.security.web.header.HeaderWriterFilter@220e62d, org.springframework.security.web.authentication.logout.LogoutFilter@192f1cd6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2cd26bd0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3a00ca35, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@26b8665, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45fd6fa9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@302c7f30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14b9af8b, org.springframework.security.web.session.SessionManagementFilter@272eaf65, org.springframework.security.web.access.ExceptionTranslationFilter@d35e153, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29752b28]
2018-03-12 12:39:18 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:39:18 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:39:18 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:39:18 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:39:18 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40302a4a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4612c8de, org.springframework.security.web.header.HeaderWriterFilter@515498f1, org.springframework.web.filter.CorsFilter@7708f2f8, org.springframework.security.web.authentication.logout.LogoutFilter@6140c55d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3c2a8a2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f51565b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a37c650, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12c41202, org.springframework.security.web.session.SessionManagementFilter@66adba39, org.springframework.security.web.access.ExceptionTranslationFilter@1b38544b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5da1abc8]
2018-03-12 12:39:19 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53f0837b: startup date [Mon Mar 12 12:38:33 CET 2018]; root of context hierarchy
2018-03-12 12:39:19 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:39:19 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:39:20 - LiveReload server is running on port 35729
2018-03-12 12:39:21 - Registering beans for JMX exposure on startup
2018-03-12 12:39:21 - Registering beans for JMX exposure on startup
2018-03-12 12:39:21 - Starting beans in phase 0
2018-03-12 12:39:21 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 12:39:21 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 12:39:21 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 12:39:21 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 12:39:21 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 12:39:21 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 12:39:21 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 12:39:21 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 12:39:21 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 12:39:21 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 12:39:21 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 12:39:21 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 12:39:21 - Starting beans in phase 2147483647
2018-03-12 12:39:21 - Context refreshed
2018-03-12 12:39:21 - Found 1 custom documentation plugin(s)
2018-03-12 12:39:21 - Scanning for api listing references
2018-03-12 12:39:22 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 12:39:22 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 12:39:22 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: addUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: addUsingPOST_1
2018-03-12 12:39:22 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 12:39:22 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 12:39:22 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 12:39:22 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 12:39:22 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 12:39:22 - Generating unique operation named: getUserUsingGET_1
2018-03-12 12:39:22 - Generating unique operation named: getUserUsingGET_2
2018-03-12 12:39:22 - Generating unique operation named: getUserUsingGET_3
2018-03-12 12:39:22 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 12:39:22 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 12:39:22 - Using a shared selector for servlet write/read
2018-03-12 12:39:22 - Tomcat started on port(s): 8080 (http)
2018-03-12 12:39:23 - Started ProjectCrMbyMwaApplication in 50.967 seconds (JVM running for 53.856)
2018-03-12 12:41:37 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 12:41:37 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 12:41:37 - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2018-03-12 12:41:44 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 12:43:54 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53f0837b: startup date [Mon Mar 12 12:38:33 CET 2018]; root of context hierarchy
2018-03-12 12:43:54 - Stopping beans in phase 2147483647
2018-03-12 12:43:54 - Stopping beans in phase 0
2018-03-12 12:43:54 - Unregistering JMX-exposed beans on shutdown
2018-03-12 12:43:54 - Unregistering JMX-exposed beans
2018-03-12 12:43:54 - Unregistering JMX-exposed beans on shutdown
2018-03-12 12:43:54 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 12:43:54 - HHH000227: Running hbm2ddl schema export
2018-03-12 12:44:00 - HHH000230: Schema export complete
2018-03-12 12:44:01 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 3950 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 12:44:01 - No active profile set, falling back to default profiles: default
2018-03-12 12:44:01 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38882504: startup date [Mon Mar 12 12:44:01 CET 2018]; root of context hierarchy
2018-03-12 12:44:03 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 12:44:03 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ba34c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 12:44:03 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 12:44:03 - Starting service [Tomcat]
2018-03-12 12:44:03 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 12:44:03 - Initializing Spring embedded WebApplicationContext
2018-03-12 12:44:03 - Root WebApplicationContext: initialization completed in 2183 ms
2018-03-12 12:44:04 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 12:44:04 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 12:44:04 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 12:44:04 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 12:44:04 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 12:44:04 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 12:44:05 - HHH000227: Running hbm2ddl schema export
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 12:44:05 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 12:44:05 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 12:44:05 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 12:44:05 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 12:44:05 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 12:44:05 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 12:44:05 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 12:44:05 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 12:44:05 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 12:44:05 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 12:44:05 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 12:44:05 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 12:44:05 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 12:44:05 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 12:44:05 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 12:44:05 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 12:44:05 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:44:05 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 12:44:05 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:44:33 - HHH000230: Schema export complete
2018-03-12 12:44:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 12:44:33 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 12:44:35 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2181 ms.
2018-03-12 12:44:35 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 12:44:35 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 12:44:35 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 12:44:35 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 12:44:35 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 12:44:35 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 12:44:35 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 12:44:35 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 12:44:36 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 12:44:36 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 12:44:36 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 12:44:36 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 12:44:36 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 12:44:36 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 12:44:36 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 12:44:36 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 12:44:36 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 12:44:36 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 12:44:36 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 12:44:36 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 12:44:36 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 12:44:36 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 12:44:36 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 12:44:36 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 12:44:36 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 12:44:36 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:44:36 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 12:44:36 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 12:44:36 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 12:44:36 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 12:44:36 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:44:36 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 12:44:36 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 12:44:36 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:44:36 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:44:36 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 12:44:36 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 12:44:36 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 12:44:36 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 12:44:36 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 12:44:36 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 12:44:36 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 12:44:36 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 12:44:36 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 12:44:36 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 12:44:36 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 12:44:36 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 12:44:36 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 12:44:36 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 12:44:36 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 12:44:36 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 12:44:36 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 12:44:36 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 12:44:36 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 12:44:36 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 12:44:36 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 12:44:36 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 12:44:36 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 12:44:36 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:44:36 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32d7e9b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@ee5a07b, org.springframework.security.web.header.HeaderWriterFilter@6aff52fa, org.springframework.security.web.authentication.logout.LogoutFilter@2c0659e7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3591a185, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@f43d60c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4dee8558, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@151f4164, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@567a9bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ffaf437, org.springframework.security.web.session.SessionManagementFilter@fa0a1ce, org.springframework.security.web.access.ExceptionTranslationFilter@436b0152, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64ef3be0]
2018-03-12 12:44:36 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:44:36 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:44:36 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:44:36 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:44:36 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b35cb34, org.springframework.security.web.context.SecurityContextPersistenceFilter@24875b79, org.springframework.security.web.header.HeaderWriterFilter@6e7a3ee3, org.springframework.web.filter.CorsFilter@266c8046, org.springframework.security.web.authentication.logout.LogoutFilter@4adec4a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5869af79, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75d7c585, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a6560fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6619be83, org.springframework.security.web.session.SessionManagementFilter@25dd7b7f, org.springframework.security.web.access.ExceptionTranslationFilter@1a3367, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47d268e4]
2018-03-12 12:44:36 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38882504: startup date [Mon Mar 12 12:44:01 CET 2018]; root of context hierarchy
2018-03-12 12:44:36 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:44:36 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:44:36 - LiveReload server is running on port 35729
2018-03-12 12:44:36 - Registering beans for JMX exposure on startup
2018-03-12 12:44:36 - Registering beans for JMX exposure on startup
2018-03-12 12:44:36 - Starting beans in phase 0
2018-03-12 12:44:36 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 12:44:36 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 12:44:36 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 12:44:36 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 12:44:36 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 12:44:37 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 12:44:37 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 12:44:37 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 12:44:37 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 12:44:37 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 12:44:37 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 12:44:37 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 12:44:37 - Starting beans in phase 2147483647
2018-03-12 12:44:37 - Context refreshed
2018-03-12 12:44:37 - Found 1 custom documentation plugin(s)
2018-03-12 12:44:37 - Scanning for api listing references
2018-03-12 12:44:37 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 12:44:37 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 12:44:37 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: addUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: addUsingPOST_1
2018-03-12 12:44:37 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 12:44:37 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 12:44:37 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 12:44:37 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 12:44:37 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 12:44:37 - Generating unique operation named: getUserUsingGET_1
2018-03-12 12:44:37 - Generating unique operation named: getUserUsingGET_2
2018-03-12 12:44:37 - Generating unique operation named: getUserUsingGET_3
2018-03-12 12:44:37 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 12:44:37 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 12:44:37 - Using a shared selector for servlet write/read
2018-03-12 12:44:37 - Tomcat started on port(s): 8080 (http)
2018-03-12 12:44:37 - Started ProjectCrMbyMwaApplication in 36.147 seconds (JVM running for 368.466)
2018-03-12 12:56:53 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 12:56:53 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 12:56:53 - FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
2018-03-12 12:56:53 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 12:58:51 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38882504: startup date [Mon Mar 12 12:44:01 CET 2018]; root of context hierarchy
2018-03-12 12:58:51 - Stopping beans in phase 2147483647
2018-03-12 12:58:51 - Stopping beans in phase 0
2018-03-12 12:58:51 - Unregistering JMX-exposed beans on shutdown
2018-03-12 12:58:51 - Unregistering JMX-exposed beans
2018-03-12 12:58:51 - Unregistering JMX-exposed beans on shutdown
2018-03-12 12:58:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 12:58:51 - HHH000227: Running hbm2ddl schema export
2018-03-12 12:58:55 - HHH000230: Schema export complete
2018-03-12 12:58:55 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 3950 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 12:58:56 - No active profile set, falling back to default profiles: default
2018-03-12 12:58:56 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78d6ea93: startup date [Mon Mar 12 12:58:56 CET 2018]; root of context hierarchy
2018-03-12 12:58:57 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 12:58:57 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ba34c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 12:58:57 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 12:58:57 - Starting service [Tomcat]
2018-03-12 12:58:57 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 12:58:57 - Initializing Spring embedded WebApplicationContext
2018-03-12 12:58:57 - Root WebApplicationContext: initialization completed in 1429 ms
2018-03-12 12:58:57 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 12:58:57 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 12:58:57 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 12:58:57 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 12:58:57 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 12:58:57 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 12:58:58 - HHH000227: Running hbm2ddl schema export
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 12:58:58 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 12:58:58 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 12:58:58 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 12:58:58 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 12:58:58 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 12:58:58 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 12:58:58 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 12:58:58 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 12:58:58 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 12:58:58 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 12:58:58 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 12:58:58 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 12:58:58 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 12:58:58 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 12:58:58 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 12:58:58 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 12:58:58 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:58:58 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 12:58:58 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 12:59:23 - HHH000230: Schema export complete
2018-03-12 12:59:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 12:59:23 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 12:59:25 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2128 ms.
2018-03-12 12:59:25 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 12:59:25 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 12:59:25 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 12:59:25 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 12:59:25 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 12:59:25 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 12:59:25 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 12:59:25 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 12:59:25 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 12:59:25 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 12:59:25 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 12:59:25 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 12:59:25 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 12:59:25 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 12:59:25 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 12:59:25 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 12:59:25 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 12:59:25 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 12:59:25 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 12:59:25 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 12:59:25 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 12:59:25 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:59:25 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 12:59:25 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 12:59:25 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 12:59:25 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 12:59:25 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 12:59:25 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:59:25 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 12:59:25 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 12:59:25 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 12:59:25 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 12:59:25 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 12:59:25 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 12:59:25 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 12:59:25 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 12:59:25 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 12:59:25 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 12:59:25 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 12:59:25 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 12:59:25 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 12:59:25 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 12:59:25 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 12:59:25 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 12:59:25 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 12:59:25 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 12:59:25 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 12:59:25 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 12:59:25 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 12:59:25 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 12:59:25 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 12:59:25 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 12:59:25 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 12:59:26 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ee1be03, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c5d5e50, org.springframework.security.web.header.HeaderWriterFilter@2baf7072, org.springframework.security.web.authentication.logout.LogoutFilter@4a553350, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@46e2bc99, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1cac414b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@27f8a68f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@264eee93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@763226c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@547255ba, org.springframework.security.web.session.SessionManagementFilter@381a5dd8, org.springframework.security.web.access.ExceptionTranslationFilter@4a7a1e66, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52d30144]
2018-03-12 12:59:26 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:59:26 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:59:26 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:59:26 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 12:59:26 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17621fdd, org.springframework.security.web.context.SecurityContextPersistenceFilter@77e93044, org.springframework.security.web.header.HeaderWriterFilter@2e89d9cd, org.springframework.web.filter.CorsFilter@66940bcf, org.springframework.security.web.authentication.logout.LogoutFilter@1ba6d88b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@392bcc72, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3664bc5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56c34ceb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39e34935, org.springframework.security.web.session.SessionManagementFilter@f98561e, org.springframework.security.web.access.ExceptionTranslationFilter@8b92eac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@665ffe7f]
2018-03-12 12:59:26 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78d6ea93: startup date [Mon Mar 12 12:58:56 CET 2018]; root of context hierarchy
2018-03-12 12:59:26 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:59:26 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 12:59:26 - LiveReload server is running on port 35729
2018-03-12 12:59:26 - Registering beans for JMX exposure on startup
2018-03-12 12:59:26 - Registering beans for JMX exposure on startup
2018-03-12 12:59:26 - Starting beans in phase 0
2018-03-12 12:59:26 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 12:59:26 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 12:59:26 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 12:59:26 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 12:59:26 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 12:59:26 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 12:59:26 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 12:59:26 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 12:59:26 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 12:59:26 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 12:59:26 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 12:59:26 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 12:59:26 - Starting beans in phase 2147483647
2018-03-12 12:59:26 - Context refreshed
2018-03-12 12:59:26 - Found 1 custom documentation plugin(s)
2018-03-12 12:59:26 - Scanning for api listing references
2018-03-12 12:59:26 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 12:59:26 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 12:59:26 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 12:59:26 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 12:59:26 - Generating unique operation named: addUsingGET_1
2018-03-12 12:59:27 - Generating unique operation named: addUsingPOST_1
2018-03-12 12:59:27 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 12:59:27 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 12:59:27 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 12:59:27 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 12:59:27 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 12:59:27 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 12:59:27 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 12:59:27 - Generating unique operation named: getUserUsingGET_1
2018-03-12 12:59:27 - Generating unique operation named: getUserUsingGET_2
2018-03-12 12:59:27 - Generating unique operation named: getUserUsingGET_3
2018-03-12 12:59:27 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 12:59:27 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 12:59:27 - Using a shared selector for servlet write/read
2018-03-12 12:59:27 - Tomcat started on port(s): 8080 (http)
2018-03-12 12:59:27 - Started ProjectCrMbyMwaApplication in 31.343 seconds (JVM running for 1258.101)
2018-03-12 13:02:07 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 13:02:07 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 13:02:07 - FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
2018-03-12 13:07:22 - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries
 at [Source: java.io.PushbackInputStream@6596d099; line: 20, column: 4]
2018-03-12 13:07:22 - Resolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries
 at [Source: java.io.PushbackInputStream@6596d099; line: 20, column: 4]
2018-03-12 13:11:39 - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: java.io.PushbackInputStream@403ab9e0; line: 6, column: 2]
2018-03-12 13:11:39 - Resolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: java.io.PushbackInputStream@403ab9e0; line: 6, column: 2]
2018-03-12 13:13:30 - Address with id: 1 created
2018-03-12 13:15:26 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at pl.mwa.address.AddressService.update(AddressService.java:48)
	at pl.mwa.address.AddressResource.updateAddress(AddressResource.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:664)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:177)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-03-12 13:17:49 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 13:17:50 - Address with id: 1 updated
2018-03-12 13:23:30 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78d6ea93: startup date [Mon Mar 12 12:58:56 CET 2018]; root of context hierarchy
2018-03-12 13:23:30 - Stopping beans in phase 2147483647
2018-03-12 13:23:30 - Stopping beans in phase 0
2018-03-12 13:23:30 - Unregistering JMX-exposed beans on shutdown
2018-03-12 13:23:30 - Unregistering JMX-exposed beans
2018-03-12 13:23:30 - Unregistering JMX-exposed beans on shutdown
2018-03-12 13:23:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 13:23:30 - HHH000227: Running hbm2ddl schema export
2018-03-12 13:23:34 - HHH000230: Schema export complete
2018-03-12 13:23:36 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 3950 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 13:23:36 - No active profile set, falling back to default profiles: default
2018-03-12 13:23:36 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ea67692: startup date [Mon Mar 12 13:23:36 CET 2018]; root of context hierarchy
2018-03-12 13:23:36 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 13:23:37 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ba34c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 13:23:37 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 13:23:37 - Starting service [Tomcat]
2018-03-12 13:23:37 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 13:23:37 - Initializing Spring embedded WebApplicationContext
2018-03-12 13:23:37 - Root WebApplicationContext: initialization completed in 1214 ms
2018-03-12 13:23:37 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 13:23:37 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 13:23:37 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 13:23:37 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 13:23:37 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 13:23:37 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 13:23:37 - HHH000227: Running hbm2ddl schema export
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 13:23:37 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 13:23:37 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 13:23:37 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 13:23:37 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 13:23:37 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 13:23:37 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 13:23:37 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 13:23:37 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 13:23:37 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 13:23:37 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 13:23:37 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 13:23:37 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 13:23:37 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 13:23:37 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 13:23:37 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 13:23:37 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 13:23:37 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 13:23:37 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 13:23:37 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 13:24:02 - HHH000230: Schema export complete
2018-03-12 13:24:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 13:24:02 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 13:24:04 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2161 ms.
2018-03-12 13:24:04 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 13:24:04 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 13:24:04 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 13:24:04 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 13:24:04 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 13:24:04 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 13:24:04 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 13:24:04 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 13:24:04 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 13:24:04 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 13:24:04 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 13:24:04 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 13:24:04 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 13:24:04 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 13:24:04 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 13:24:04 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 13:24:04 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 13:24:04 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 13:24:04 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 13:24:04 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 13:24:04 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 13:24:04 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 13:24:04 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 13:24:04 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 13:24:04 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 13:24:04 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 13:24:04 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 13:24:04 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 13:24:04 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 13:24:04 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 13:24:04 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 13:24:04 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 13:24:04 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 13:24:04 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 13:24:04 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 13:24:04 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 13:24:04 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 13:24:04 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 13:24:04 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 13:24:04 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 13:24:04 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 13:24:04 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 13:24:04 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 13:24:04 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 13:24:04 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 13:24:04 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 13:24:05 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 13:24:05 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 13:24:05 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 13:24:05 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 13:24:05 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 13:24:05 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 13:24:05 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 13:24:05 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 13:24:05 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 13:24:05 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 13:24:05 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 13:24:05 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@671eaaed, org.springframework.security.web.context.SecurityContextPersistenceFilter@41d57d73, org.springframework.security.web.header.HeaderWriterFilter@31c05b93, org.springframework.security.web.authentication.logout.LogoutFilter@5f2883b1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@60ff4417, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@357c4e88, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@30b512dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3455363, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30ea9c5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c5a28cf, org.springframework.security.web.session.SessionManagementFilter@596b8f09, org.springframework.security.web.access.ExceptionTranslationFilter@667494ce, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d34180]
2018-03-12 13:24:05 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 13:24:05 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 13:24:05 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 13:24:05 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 13:24:05 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e3c1bd8, org.springframework.security.web.context.SecurityContextPersistenceFilter@497cceb1, org.springframework.security.web.header.HeaderWriterFilter@20029cfc, org.springframework.web.filter.CorsFilter@32f2b164, org.springframework.security.web.authentication.logout.LogoutFilter@3bdecee8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@76519b7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bf97984, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fa8f37b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3698952d, org.springframework.security.web.session.SessionManagementFilter@2d373abc, org.springframework.security.web.access.ExceptionTranslationFilter@11d871f3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d4fbd8]
2018-03-12 13:24:05 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ea67692: startup date [Mon Mar 12 13:23:36 CET 2018]; root of context hierarchy
2018-03-12 13:24:05 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 13:24:05 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 13:24:05 - LiveReload server is running on port 35729
2018-03-12 13:24:05 - Registering beans for JMX exposure on startup
2018-03-12 13:24:05 - Registering beans for JMX exposure on startup
2018-03-12 13:24:05 - Starting beans in phase 0
2018-03-12 13:24:05 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 13:24:05 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 13:24:05 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 13:24:05 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 13:24:05 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 13:24:05 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 13:24:05 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 13:24:05 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 13:24:05 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 13:24:05 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 13:24:05 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 13:24:05 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 13:24:05 - Starting beans in phase 2147483647
2018-03-12 13:24:05 - Context refreshed
2018-03-12 13:24:05 - Found 1 custom documentation plugin(s)
2018-03-12 13:24:05 - Scanning for api listing references
2018-03-12 13:24:05 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 13:24:05 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 13:24:05 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 13:24:05 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 13:24:06 - Generating unique operation named: addUsingGET_1
2018-03-12 13:24:06 - Generating unique operation named: addUsingPOST_1
2018-03-12 13:24:06 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 13:24:06 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 13:24:06 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 13:24:06 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 13:24:06 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 13:24:06 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 13:24:06 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 13:24:06 - Generating unique operation named: getUserUsingGET_1
2018-03-12 13:24:06 - Generating unique operation named: getUserUsingGET_2
2018-03-12 13:24:06 - Generating unique operation named: getUserUsingGET_3
2018-03-12 13:24:06 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 13:24:06 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 13:24:06 - Using a shared selector for servlet write/read
2018-03-12 13:24:06 - Tomcat started on port(s): 8080 (http)
2018-03-12 13:24:06 - Started ProjectCrMbyMwaApplication in 30.382 seconds (JVM running for 2737.106)
2018-03-12 14:19:36 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ea67692: startup date [Mon Mar 12 13:23:36 CET 2018]; root of context hierarchy
2018-03-12 14:19:36 - Stopping beans in phase 2147483647
2018-03-12 14:19:36 - Stopping beans in phase 0
2018-03-12 14:19:36 - Unregistering JMX-exposed beans on shutdown
2018-03-12 14:19:36 - Unregistering JMX-exposed beans
2018-03-12 14:19:36 - Unregistering JMX-exposed beans on shutdown
2018-03-12 14:19:36 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:19:36 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:19:40 - HHH000230: Schema export complete
2018-03-12 14:19:41 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 3950 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 14:19:41 - No active profile set, falling back to default profiles: default
2018-03-12 14:19:41 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@108a0c3e: startup date [Mon Mar 12 14:19:41 CET 2018]; root of context hierarchy
2018-03-12 14:19:41 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 14:19:42 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ba34c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 14:19:42 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 14:19:42 - Starting service [Tomcat]
2018-03-12 14:19:42 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 14:19:42 - Initializing Spring embedded WebApplicationContext
2018-03-12 14:19:42 - Root WebApplicationContext: initialization completed in 1036 ms
2018-03-12 14:19:42 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 14:19:42 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 14:19:42 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 14:19:42 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 14:19:42 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 14:19:42 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 14:19:42 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 14:19:42 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 14:19:42 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 14:19:42 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 14:19:42 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 14:19:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 14:19:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 14:19:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 14:19:42 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 14:19:42 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 14:19:42 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 14:19:42 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 14:19:42 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 14:19:42 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 14:19:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 14:19:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 14:19:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 14:19:42 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:19:42 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 14:19:42 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:20:08 - HHH000230: Schema export complete
2018-03-12 14:20:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:20:09 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 14:20:11 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#4909172' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4909172': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
2018-03-12 14:20:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:20:11 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:20:15 - HHH000230: Schema export complete
2018-03-12 14:20:15 - Stopping service [Tomcat]
2018-03-12 14:20:15 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-12 14:20:15 - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#4909172' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4909172': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at pl.mwa.ProjectCrMbyMwaApplication.main(ProjectCrMbyMwaApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#4909172' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4909172': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#4909172' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4909172': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4909172': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 58 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:491)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runDataScripts(DataSourceInitializer.java:128)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:118)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:51)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:77)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:68)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:113)
	... 62 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2438)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:470)
	... 78 common frames omitted
2018-03-12 14:23:35 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5075 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 14:23:35 - No active profile set, falling back to default profiles: default
2018-03-12 14:23:35 - HV000001: Hibernate Validator 5.3.6.Final
2018-03-12 14:23:35 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51bc61bc: startup date [Mon Mar 12 14:23:35 CET 2018]; root of context hierarchy
2018-03-12 14:23:37 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 14:23:38 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e11378a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 14:23:39 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 14:23:39 - Starting service [Tomcat]
2018-03-12 14:23:39 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 14:23:39 - Initializing Spring embedded WebApplicationContext
2018-03-12 14:23:39 - Root WebApplicationContext: initialization completed in 4008 ms
2018-03-12 14:23:40 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 14:23:40 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 14:23:40 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 14:23:41 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 14:23:41 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 14:23:41 - HHH000412: Hibernate Core {5.0.12.Final}
2018-03-12 14:23:41 - HHH000206: hibernate.properties not found
2018-03-12 14:23:41 - HHH000021: Bytecode provider name : javassist
2018-03-12 14:23:41 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-03-12 14:23:41 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 14:23:42 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 14:23:42 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 14:23:42 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 14:23:42 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 14:23:42 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 14:23:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 14:23:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 14:23:42 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 14:23:42 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 14:23:42 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 14:23:42 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 14:23:42 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 14:23:42 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 14:23:42 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 14:23:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 14:23:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 14:23:42 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 14:23:42 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:23:42 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 14:23:42 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:24:07 - HHH000230: Schema export complete
2018-03-12 14:24:07 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:24:08 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 14:24:10 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#731f8c6c' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#731f8c6c': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
2018-03-12 14:24:10 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:24:10 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:24:14 - HHH000230: Schema export complete
2018-03-12 14:24:14 - Stopping service [Tomcat]
2018-03-12 14:24:14 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-12 14:24:14 - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#731f8c6c' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#731f8c6c': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at pl.mwa.ProjectCrMbyMwaApplication.main(ProjectCrMbyMwaApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#731f8c6c' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#731f8c6c': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#731f8c6c' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#731f8c6c': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#731f8c6c': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 58 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:491)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runDataScripts(DataSourceInitializer.java:128)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:118)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:51)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:77)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:68)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:113)
	... 62 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2438)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:470)
	... 78 common frames omitted
2018-03-12 14:26:12 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5139 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 14:26:12 - No active profile set, falling back to default profiles: default
2018-03-12 14:26:13 - HV000001: Hibernate Validator 5.3.6.Final
2018-03-12 14:26:13 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@115e3543: startup date [Mon Mar 12 14:26:13 CET 2018]; root of context hierarchy
2018-03-12 14:26:14 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 14:26:15 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67cd79a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 14:26:16 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 14:26:16 - Starting service [Tomcat]
2018-03-12 14:26:16 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 14:26:16 - Initializing Spring embedded WebApplicationContext
2018-03-12 14:26:16 - Root WebApplicationContext: initialization completed in 3576 ms
2018-03-12 14:26:17 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 14:26:17 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 14:26:17 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 14:26:18 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 14:26:18 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 14:26:18 - HHH000412: Hibernate Core {5.0.12.Final}
2018-03-12 14:26:18 - HHH000206: hibernate.properties not found
2018-03-12 14:26:18 - HHH000021: Bytecode provider name : javassist
2018-03-12 14:26:18 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-03-12 14:26:18 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 14:26:19 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 14:26:19 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 14:26:19 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 14:26:19 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 14:26:19 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 14:26:19 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 14:26:19 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 14:26:19 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 14:26:19 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 14:26:19 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 14:26:19 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 14:26:19 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 14:26:19 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 14:26:19 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 14:26:19 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 14:26:19 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 14:26:19 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 14:26:19 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:26:19 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 14:26:19 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 14:26:45 - HHH000230: Schema export complete
2018-03-12 14:26:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:26:45 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 14:26:47 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#7df8d867' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7df8d867': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
2018-03-12 14:26:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 14:26:47 - HHH000227: Running hbm2ddl schema export
2018-03-12 14:26:52 - HHH000230: Schema export complete
2018-03-12 14:26:52 - Stopping service [Tomcat]
2018-03-12 14:26:52 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-12 14:26:52 - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#7df8d867' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7df8d867': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at pl.mwa.ProjectCrMbyMwaApplication.main(ProjectCrMbyMwaApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#7df8d867' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7df8d867': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#7df8d867' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7df8d867': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7df8d867': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 58 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into representatives values(1, 1, 'sebastian.chmielewski@codexo.com', 'Sebastian', 'Chmielewski', '500-150-001', 'KAM', 1); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:491)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runDataScripts(DataSourceInitializer.java:128)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:118)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:51)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:77)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:68)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:113)
	... 62 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`projcrmdb1`.`representatives`, CONSTRAINT `FKf6vdslo2ou8elpchblu6qm3a4` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2438)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:470)
	... 78 common frames omitted
2018-03-12 16:54:52 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5762 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 16:54:52 - No active profile set, falling back to default profiles: default
2018-03-12 16:54:53 - HV000001: Hibernate Validator 5.3.6.Final
2018-03-12 16:54:53 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f55c51: startup date [Mon Mar 12 16:54:53 CET 2018]; root of context hierarchy
2018-03-12 16:54:55 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 16:54:56 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71d85f83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 16:54:57 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 16:54:57 - Starting service [Tomcat]
2018-03-12 16:54:57 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 16:54:57 - Initializing Spring embedded WebApplicationContext
2018-03-12 16:54:57 - Root WebApplicationContext: initialization completed in 4196 ms
2018-03-12 16:54:57 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 16:54:57 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 16:54:57 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 16:54:58 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 16:54:58 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 16:54:58 - HHH000412: Hibernate Core {5.0.12.Final}
2018-03-12 16:54:58 - HHH000206: hibernate.properties not found
2018-03-12 16:54:58 - HHH000021: Bytecode provider name : javassist
2018-03-12 16:54:59 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-03-12 16:54:59 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 16:55:00 - HHH000227: Running hbm2ddl schema export
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 16:55:00 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 16:55:00 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 16:55:00 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 16:55:00 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 16:55:00 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 16:55:00 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 16:55:00 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 16:55:00 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 16:55:00 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 16:55:00 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 16:55:00 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 16:55:00 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 16:55:00 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 16:55:00 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 16:55:00 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 16:55:00 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 16:55:00 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 16:55:00 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 16:55:00 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 16:55:28 - HHH000230: Schema export complete
2018-03-12 16:55:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 16:55:28 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 16:55:30 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#5bd23608' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5bd23608': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
2018-03-12 16:55:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 16:55:30 - HHH000227: Running hbm2ddl schema export
2018-03-12 16:55:35 - HHH000230: Schema export complete
2018-03-12 16:55:35 - Stopping service [Tomcat]
2018-03-12 16:55:35 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-12 16:55:35 - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressResource': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#5bd23608' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5bd23608': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at pl.mwa.ProjectCrMbyMwaApplication.main(ProjectCrMbyMwaApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'addressService': Unsatisfied dependency expressed through field 'repository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#5bd23608' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5bd23608': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'addressRepository': Cannot create inner bean '(inner bean)#5bd23608' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5bd23608': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5bd23608': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': Post-processing of FactoryBean's singleton object failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 58 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #32 of URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]: insert into client values(1, 'CDX', 1, 0, 'CODEXO SA', 2); nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:491)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runDataScripts(DataSourceInitializer.java:128)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:118)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:51)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:77)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:68)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:113)
	... 62 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'projcrmdb1.client' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor47.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2438)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:470)
	... 78 common frames omitted
2018-03-12 16:57:24 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 16:57:24 - No active profile set, falling back to default profiles: default
2018-03-12 16:57:25 - HV000001: Hibernate Validator 5.3.6.Final
2018-03-12 16:57:25 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b08f0f: startup date [Mon Mar 12 16:57:25 CET 2018]; root of context hierarchy
2018-03-12 16:57:27 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 16:57:28 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 16:57:28 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 16:57:28 - Starting service [Tomcat]
2018-03-12 16:57:28 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 16:57:28 - Initializing Spring embedded WebApplicationContext
2018-03-12 16:57:28 - Root WebApplicationContext: initialization completed in 3720 ms
2018-03-12 16:57:29 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 16:57:29 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 16:57:29 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 16:57:30 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 16:57:30 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 16:57:30 - HHH000412: Hibernate Core {5.0.12.Final}
2018-03-12 16:57:30 - HHH000206: hibernate.properties not found
2018-03-12 16:57:30 - HHH000021: Bytecode provider name : javassist
2018-03-12 16:57:30 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-03-12 16:57:30 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 16:57:31 - HHH000227: Running hbm2ddl schema export
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 16:57:31 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 16:57:31 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 16:57:31 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 16:57:31 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 16:57:31 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 16:57:31 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 16:57:31 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 16:57:31 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 16:57:31 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 16:57:31 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 16:57:31 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 16:57:31 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 16:57:31 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 16:57:31 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 16:57:31 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 16:57:31 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 16:57:31 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 16:57:31 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 16:57:31 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 16:57:57 - HHH000230: Schema export complete
2018-03-12 16:57:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 16:57:57 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 16:57:59 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2223 ms.
2018-03-12 16:58:01 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 16:58:01 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 16:58:01 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 16:58:01 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 16:58:01 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 16:58:01 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 16:58:01 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 16:58:01 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 16:58:01 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 16:58:01 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 16:58:01 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 16:58:01 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 16:58:01 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 16:58:01 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 16:58:01 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 16:58:01 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 16:58:01 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 16:58:01 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 16:58:01 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 16:58:01 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 16:58:01 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 16:58:01 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 16:58:01 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 16:58:01 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 16:58:01 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 16:58:01 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 16:58:01 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 16:58:01 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 16:58:01 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 16:58:01 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 16:58:01 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 16:58:01 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 16:58:01 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 16:58:01 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 16:58:01 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 16:58:01 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 16:58:01 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 16:58:01 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 16:58:01 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 16:58:01 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 16:58:01 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 16:58:01 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 16:58:01 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 16:58:01 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 16:58:01 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 16:58:01 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 16:58:01 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 16:58:01 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 16:58:01 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 16:58:01 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 16:58:01 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 16:58:01 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 16:58:01 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 16:58:02 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bb10350, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e2260e4, org.springframework.security.web.header.HeaderWriterFilter@61272d7f, org.springframework.security.web.authentication.logout.LogoutFilter@4d1f4bd6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4bc05606, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2bdeacee, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d698de7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c9fadf7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5313aa0e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1626055f, org.springframework.security.web.session.SessionManagementFilter@100ca33c, org.springframework.security.web.access.ExceptionTranslationFilter@19efabfe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@444bc041]
2018-03-12 16:58:02 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 16:58:02 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 16:58:02 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 16:58:02 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 16:58:02 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50106d86, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b3d4d19, org.springframework.security.web.header.HeaderWriterFilter@4b76cc1c, org.springframework.web.filter.CorsFilter@40b36fa7, org.springframework.security.web.authentication.logout.LogoutFilter@36ec8878, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@25f12120, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6aa9871d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1742b078, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e8f75d4, org.springframework.security.web.session.SessionManagementFilter@2b614dcd, org.springframework.security.web.access.ExceptionTranslationFilter@5742c2e9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b484b45]
2018-03-12 16:58:02 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b08f0f: startup date [Mon Mar 12 16:57:25 CET 2018]; root of context hierarchy
2018-03-12 16:58:02 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 16:58:02 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 16:58:03 - LiveReload server is running on port 35729
2018-03-12 16:58:03 - Registering beans for JMX exposure on startup
2018-03-12 16:58:03 - Registering beans for JMX exposure on startup
2018-03-12 16:58:03 - Starting beans in phase 0
2018-03-12 16:58:03 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 16:58:03 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 16:58:03 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 16:58:03 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 16:58:03 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 16:58:03 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 16:58:03 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 16:58:03 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 16:58:03 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 16:58:03 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 16:58:03 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 16:58:03 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 16:58:03 - Starting beans in phase 2147483647
2018-03-12 16:58:03 - Context refreshed
2018-03-12 16:58:04 - Found 1 custom documentation plugin(s)
2018-03-12 16:58:04 - Scanning for api listing references
2018-03-12 16:58:04 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 16:58:04 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 16:58:04 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: addUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: addUsingPOST_1
2018-03-12 16:58:04 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 16:58:04 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 16:58:04 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 16:58:04 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 16:58:04 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 16:58:04 - Generating unique operation named: getUserUsingGET_1
2018-03-12 16:58:04 - Generating unique operation named: getUserUsingGET_2
2018-03-12 16:58:04 - Generating unique operation named: getUserUsingGET_3
2018-03-12 16:58:04 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 16:58:04 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 16:58:04 - Using a shared selector for servlet write/read
2018-03-12 16:58:04 - Tomcat started on port(s): 8080 (http)
2018-03-12 16:58:04 - Started ProjectCrMbyMwaApplication in 40.487 seconds (JVM running for 41.701)
2018-03-12 16:58:46 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 16:58:46 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 16:58:46 - FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-03-12 16:58:53 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 17:01:51 - Address with id: 1 created
2018-03-12 17:02:07 - Address with id: 1 updated
2018-03-12 17:05:32 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b08f0f: startup date [Mon Mar 12 16:57:25 CET 2018]; root of context hierarchy
2018-03-12 17:05:32 - Stopping beans in phase 2147483647
2018-03-12 17:05:32 - Stopping beans in phase 0
2018-03-12 17:05:32 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:05:32 - Unregistering JMX-exposed beans
2018-03-12 17:05:32 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:05:32 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:05:32 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:05:36 - HHH000230: Schema export complete
2018-03-12 17:05:37 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:05:37 - No active profile set, falling back to default profiles: default
2018-03-12 17:05:37 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@463acd10: startup date [Mon Mar 12 17:05:37 CET 2018]; root of context hierarchy
2018-03-12 17:05:38 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:05:38 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:05:38 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:05:38 - Starting service [Tomcat]
2018-03-12 17:05:38 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:05:38 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:05:38 - Root WebApplicationContext: initialization completed in 1109 ms
2018-03-12 17:05:38 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:05:38 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:05:38 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:05:38 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:05:38 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:05:38 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:05:39 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:05:39 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:05:39 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 17:05:39 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 17:05:39 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:05:39 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:05:39 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:05:39 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:05:39 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:05:39 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:05:39 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:05:39 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:05:39 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:05:39 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:05:39 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:05:39 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:05:39 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:05:39 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:05:39 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:05:39 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:06:03 - HHH000230: Schema export complete
2018-03-12 17:06:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:06:04 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:06:06 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2159 ms.
2018-03-12 17:06:06 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:06:06 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:06:06 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:06:06 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:06:06 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:06:06 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:06:06 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:06:06 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:06:06 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:06:06 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:06:06 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:06:06 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:06:06 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:06:06 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:06:06 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:06:06 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:06:06 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:06:06 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:06:06 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:06:06 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:06:06 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:06:06 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:06:06 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:06:06 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:06:06 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:06:06 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:06:06 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:06:06 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:06:06 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:06:06 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:06:06 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:06:06 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:06:06 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:06:06 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:06:06 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:06:06 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:06:06 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:06:06 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:06:06 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:06:06 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:06:06 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:06:06 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:06:06 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:06:06 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:06:06 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:06:06 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:06:06 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:06:06 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:06:06 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:06:06 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:06:06 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:06:06 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:06:06 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:06:07 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33c5c201, org.springframework.security.web.context.SecurityContextPersistenceFilter@50f1b586, org.springframework.security.web.header.HeaderWriterFilter@52684cf0, org.springframework.security.web.authentication.logout.LogoutFilter@527e3be2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@77321751, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@f7ef20e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@34678749, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@368f4e12, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26108bff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d059c1a, org.springframework.security.web.session.SessionManagementFilter@1657e219, org.springframework.security.web.access.ExceptionTranslationFilter@5997e1f3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11fbeea5]
2018-03-12 17:06:07 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:06:07 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:06:07 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:06:07 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:06:07 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@313c5be1, org.springframework.security.web.context.SecurityContextPersistenceFilter@23069d46, org.springframework.security.web.header.HeaderWriterFilter@eb93469, org.springframework.web.filter.CorsFilter@20a675f4, org.springframework.security.web.authentication.logout.LogoutFilter@116b2fb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@dcc5a43, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20f5b71, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45522d25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3286bf0e, org.springframework.security.web.session.SessionManagementFilter@3cff1ff3, org.springframework.security.web.access.ExceptionTranslationFilter@4dbd92ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5acb204a]
2018-03-12 17:06:07 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@463acd10: startup date [Mon Mar 12 17:05:37 CET 2018]; root of context hierarchy
2018-03-12 17:06:07 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:06:07 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:06:07 - LiveReload server is running on port 35729
2018-03-12 17:06:07 - Registering beans for JMX exposure on startup
2018-03-12 17:06:07 - Registering beans for JMX exposure on startup
2018-03-12 17:06:07 - Starting beans in phase 0
2018-03-12 17:06:07 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:06:07 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:06:07 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:06:07 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:06:07 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:06:07 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:06:07 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:06:07 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:06:07 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:06:07 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:06:07 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:06:07 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:06:07 - Starting beans in phase 2147483647
2018-03-12 17:06:07 - Context refreshed
2018-03-12 17:06:07 - Found 1 custom documentation plugin(s)
2018-03-12 17:06:07 - Scanning for api listing references
2018-03-12 17:06:07 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:06:08 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:06:08 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: addUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:06:08 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:06:08 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:06:08 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:06:08 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:06:08 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:06:08 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:06:08 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:06:08 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:06:08 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:06:08 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:06:08 - Using a shared selector for servlet write/read
2018-03-12 17:06:08 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:06:08 - Started ProjectCrMbyMwaApplication in 30.916 seconds (JVM running for 525.082)
2018-03-12 17:08:43 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@463acd10: startup date [Mon Mar 12 17:05:37 CET 2018]; root of context hierarchy
2018-03-12 17:08:43 - Stopping beans in phase 2147483647
2018-03-12 17:08:43 - Stopping beans in phase 0
2018-03-12 17:08:43 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:08:43 - Unregistering JMX-exposed beans
2018-03-12 17:08:43 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:08:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:08:43 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:08:48 - HHH000230: Schema export complete
2018-03-12 17:08:48 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:08:48 - No active profile set, falling back to default profiles: default
2018-03-12 17:08:48 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19bc4c39: startup date [Mon Mar 12 17:08:48 CET 2018]; root of context hierarchy
2018-03-12 17:08:49 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:08:49 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:08:49 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:08:49 - Starting service [Tomcat]
2018-03-12 17:08:49 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:08:50 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:08:50 - Root WebApplicationContext: initialization completed in 1192 ms
2018-03-12 17:08:50 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:08:50 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:08:50 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:08:50 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:08:50 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:08:50 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:08:50 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:08:50 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:08:50 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 17:08:50 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 17:08:50 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:08:50 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:08:50 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:08:50 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:08:50 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:08:50 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:08:50 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:08:50 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:08:50 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:08:50 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:08:50 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:08:50 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:08:50 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:08:50 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:08:50 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:08:50 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:09:16 - HHH000230: Schema export complete
2018-03-12 17:09:16 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:09:16 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:09:18 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2380 ms.
2018-03-12 17:09:19 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:09:19 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:09:19 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:09:19 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:09:19 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:09:19 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:09:19 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:09:19 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:09:19 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:09:19 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:09:19 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:09:19 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:09:19 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:09:19 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:09:19 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:09:19 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:09:19 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:09:19 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:09:19 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:09:19 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:09:19 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:09:19 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:09:19 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:09:19 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:09:19 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:09:19 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:09:19 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:09:19 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:09:19 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:09:19 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:09:19 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:09:19 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:09:19 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:09:19 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:09:19 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:09:19 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:09:19 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:09:19 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:09:19 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:09:19 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:09:19 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:09:19 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:09:19 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:09:19 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:09:19 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:09:19 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:09:19 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:09:19 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:09:19 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:09:19 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:09:19 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:09:19 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:09:19 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:09:19 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16834ff4, org.springframework.security.web.context.SecurityContextPersistenceFilter@4914cdd7, org.springframework.security.web.header.HeaderWriterFilter@4d6fcb12, org.springframework.security.web.authentication.logout.LogoutFilter@46b82ddf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76d9fc5c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@292d2758, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@21f0cf0d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39adc0b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aa9bbcd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d96caef, org.springframework.security.web.session.SessionManagementFilter@4f4fa6a, org.springframework.security.web.access.ExceptionTranslationFilter@78610509, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3fc49942]
2018-03-12 17:09:19 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:09:19 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:09:19 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:09:19 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:09:19 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60195176, org.springframework.security.web.context.SecurityContextPersistenceFilter@20be75e0, org.springframework.security.web.header.HeaderWriterFilter@121e8e11, org.springframework.web.filter.CorsFilter@747b56f8, org.springframework.security.web.authentication.logout.LogoutFilter@34fa417f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1a48ec24, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11b429d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@773c43f1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a48427f, org.springframework.security.web.session.SessionManagementFilter@134a19f0, org.springframework.security.web.access.ExceptionTranslationFilter@3b214344, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@20d418c9]
2018-03-12 17:09:19 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19bc4c39: startup date [Mon Mar 12 17:08:48 CET 2018]; root of context hierarchy
2018-03-12 17:09:19 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:09:19 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:09:20 - LiveReload server is running on port 35729
2018-03-12 17:09:20 - Registering beans for JMX exposure on startup
2018-03-12 17:09:20 - Registering beans for JMX exposure on startup
2018-03-12 17:09:20 - Starting beans in phase 0
2018-03-12 17:09:20 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:09:20 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:09:20 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:09:20 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:09:20 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:09:20 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:09:20 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:09:20 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:09:20 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:09:20 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:09:20 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:09:20 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:09:20 - Starting beans in phase 2147483647
2018-03-12 17:09:20 - Context refreshed
2018-03-12 17:09:20 - Found 1 custom documentation plugin(s)
2018-03-12 17:09:20 - Scanning for api listing references
2018-03-12 17:09:20 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:09:20 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:09:20 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: addUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:09:20 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:09:20 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:09:20 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:09:20 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:09:20 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:09:20 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:09:20 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:09:20 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:09:20 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:09:20 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:09:20 - Using a shared selector for servlet write/read
2018-03-12 17:09:20 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:09:20 - Started ProjectCrMbyMwaApplication in 32.059 seconds (JVM running for 717.563)
2018-03-12 17:11:30 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 17:11:30 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 17:11:30 - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
2018-03-12 17:14:17 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19bc4c39: startup date [Mon Mar 12 17:08:48 CET 2018]; root of context hierarchy
2018-03-12 17:14:17 - Stopping beans in phase 2147483647
2018-03-12 17:14:17 - Stopping beans in phase 0
2018-03-12 17:14:17 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:14:17 - Unregistering JMX-exposed beans
2018-03-12 17:14:17 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:14:17 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:14:17 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:14:21 - HHH000230: Schema export complete
2018-03-12 17:14:22 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:14:22 - No active profile set, falling back to default profiles: default
2018-03-12 17:14:22 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408c7b2: startup date [Mon Mar 12 17:14:22 CET 2018]; root of context hierarchy
2018-03-12 17:14:23 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:14:23 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:14:23 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:14:23 - Starting service [Tomcat]
2018-03-12 17:14:23 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:14:23 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:14:23 - Root WebApplicationContext: initialization completed in 1435 ms
2018-03-12 17:14:24 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:14:24 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:14:24 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:14:24 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:14:24 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:14:24 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:14:24 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:14:24 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:14:24 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FKdr5xwg72f08h59udnicyqse14
2018-03-12 17:14:24 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table clients_representatives drop foreign key FK5kvwqv6f9ffwpo4kppq8c5g3w
2018-03-12 17:14:24 - Table 'projcrmdb1.clients_representatives' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:14:24 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:14:24 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:14:24 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:14:24 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:14:24 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:14:24 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:14:24 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:14:24 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:14:24 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:14:24 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:14:24 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:14:24 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:14:24 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:14:24 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:14:24 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:14:48 - HHH000230: Schema export complete
2018-03-12 17:14:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:14:48 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:14:51 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2467 ms.
2018-03-12 17:14:51 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:14:51 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:14:51 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:14:51 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:14:51 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:14:51 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:14:51 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:14:51 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:14:51 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:14:51 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:14:51 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:14:51 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:14:51 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:14:51 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:14:51 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:14:51 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:14:51 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:14:51 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:14:51 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:14:51 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:14:51 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:14:51 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:14:51 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:14:51 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:14:51 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:14:51 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:14:51 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:14:51 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:14:51 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:14:51 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:14:51 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:14:51 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:14:51 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:14:51 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:14:51 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:14:51 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:14:51 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:14:51 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:14:51 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:14:51 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:14:51 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:14:51 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:14:51 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:14:51 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:14:51 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:14:51 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:14:51 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:14:51 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:14:51 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:51 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:14:51 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:14:51 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:14:51 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:14:51 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:14:52 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4be271d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@b609bd0, org.springframework.security.web.header.HeaderWriterFilter@50870b93, org.springframework.security.web.authentication.logout.LogoutFilter@29b44aa2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5681405f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2685fbb9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@36aceec0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56dcb996, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3eeffb4d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66e653db, org.springframework.security.web.session.SessionManagementFilter@5858054c, org.springframework.security.web.access.ExceptionTranslationFilter@49f29278, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5dfe0af1]
2018-03-12 17:14:52 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:14:52 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:14:52 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:14:52 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:14:52 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ab4407a, org.springframework.security.web.context.SecurityContextPersistenceFilter@1da81eb1, org.springframework.security.web.header.HeaderWriterFilter@5c8497b7, org.springframework.web.filter.CorsFilter@22092d2a, org.springframework.security.web.authentication.logout.LogoutFilter@7e87a5ae, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@29d42f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@995304e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@715437e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@785dafd9, org.springframework.security.web.session.SessionManagementFilter@65dd4020, org.springframework.security.web.access.ExceptionTranslationFilter@6b0ff4ce, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7278651]
2018-03-12 17:14:52 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408c7b2: startup date [Mon Mar 12 17:14:22 CET 2018]; root of context hierarchy
2018-03-12 17:14:52 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:14:52 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:14:52 - LiveReload server is running on port 35729
2018-03-12 17:14:52 - Registering beans for JMX exposure on startup
2018-03-12 17:14:52 - Registering beans for JMX exposure on startup
2018-03-12 17:14:52 - Starting beans in phase 0
2018-03-12 17:14:52 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:14:52 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:14:52 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:14:52 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:14:52 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:14:52 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:14:52 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:14:52 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:14:52 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:14:52 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:14:52 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:14:52 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:14:52 - Starting beans in phase 2147483647
2018-03-12 17:14:52 - Context refreshed
2018-03-12 17:14:52 - Found 1 custom documentation plugin(s)
2018-03-12 17:14:52 - Scanning for api listing references
2018-03-12 17:14:52 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:14:52 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:14:52 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:14:52 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:14:52 - Generating unique operation named: addUsingGET_1
2018-03-12 17:14:52 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:14:53 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:14:53 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:14:53 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:14:53 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:14:53 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:14:53 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:14:53 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:14:53 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:14:53 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:14:53 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:14:53 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:14:53 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:14:53 - Using a shared selector for servlet write/read
2018-03-12 17:14:53 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:14:53 - Started ProjectCrMbyMwaApplication in 30.799 seconds (JVM running for 1049.991)
2018-03-12 17:23:14 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408c7b2: startup date [Mon Mar 12 17:14:22 CET 2018]; root of context hierarchy
2018-03-12 17:23:14 - Stopping beans in phase 2147483647
2018-03-12 17:23:14 - Stopping beans in phase 0
2018-03-12 17:23:14 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:23:14 - Unregistering JMX-exposed beans
2018-03-12 17:23:14 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:23:14 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:23:14 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:23:19 - HHH000230: Schema export complete
2018-03-12 17:23:20 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:23:20 - No active profile set, falling back to default profiles: default
2018-03-12 17:23:20 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b55cd9: startup date [Mon Mar 12 17:23:20 CET 2018]; root of context hierarchy
2018-03-12 17:23:21 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:23:21 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:23:21 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:23:21 - Starting service [Tomcat]
2018-03-12 17:23:21 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:23:21 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:23:21 - Root WebApplicationContext: initialization completed in 1046 ms
2018-03-12 17:23:21 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:23:21 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:23:21 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:23:22 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:23:22 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:23:22 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:23:22 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:23:22 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:23:22 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:23:22 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:23:22 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:23:22 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:23:22 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:23:22 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:23:22 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:23:22 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:23:22 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:23:22 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:23:22 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:23:22 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:23:22 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:23:22 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:23:22 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:23:22 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:23:44 - HHH000230: Schema export complete
2018-03-12 17:23:44 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:23:45 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:23:47 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2726 ms.
2018-03-12 17:23:48 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:23:48 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:23:48 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:23:48 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:23:48 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:23:48 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:23:48 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:23:48 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:23:48 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:23:48 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:23:48 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:23:48 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:23:48 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:23:48 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:23:48 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:23:48 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:23:48 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:23:48 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:23:48 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:23:48 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:23:48 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:23:48 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:23:48 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:23:48 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:23:48 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:23:48 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:23:48 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:23:48 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:23:48 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:23:48 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:23:48 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:23:48 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:23:48 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:23:48 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:23:48 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:23:48 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:23:48 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:23:48 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:23:48 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:23:48 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:23:48 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:23:48 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:23:48 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:23:48 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:23:48 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:23:48 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:23:48 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:23:48 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:23:48 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:23:48 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:23:48 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:23:48 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:23:48 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:23:48 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c2dc50c, org.springframework.security.web.context.SecurityContextPersistenceFilter@3be6f4ad, org.springframework.security.web.header.HeaderWriterFilter@22797ec3, org.springframework.security.web.authentication.logout.LogoutFilter@2a3fb97d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e52e2a3, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@26707282, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77494bc3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@641b9d0a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dfd782c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1bde39d4, org.springframework.security.web.session.SessionManagementFilter@554fcd3c, org.springframework.security.web.access.ExceptionTranslationFilter@4c027417, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ea937ba]
2018-03-12 17:23:48 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:23:48 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:23:48 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:23:48 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:23:48 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3abb15e6, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b25680d, org.springframework.security.web.header.HeaderWriterFilter@56c76126, org.springframework.web.filter.CorsFilter@69268141, org.springframework.security.web.authentication.logout.LogoutFilter@4f006fd3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4193e013, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@232fa8ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e0c33fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@500a15ff, org.springframework.security.web.session.SessionManagementFilter@660cf027, org.springframework.security.web.access.ExceptionTranslationFilter@6e7cdfd1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@586720b1]
2018-03-12 17:23:48 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b55cd9: startup date [Mon Mar 12 17:23:20 CET 2018]; root of context hierarchy
2018-03-12 17:23:48 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:23:48 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:23:49 - LiveReload server is running on port 35729
2018-03-12 17:23:49 - Registering beans for JMX exposure on startup
2018-03-12 17:23:49 - Registering beans for JMX exposure on startup
2018-03-12 17:23:49 - Starting beans in phase 0
2018-03-12 17:23:49 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:23:49 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:23:49 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:23:49 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:23:49 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:23:49 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:23:49 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:23:49 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:23:49 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:23:49 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:23:49 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:23:49 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:23:49 - Starting beans in phase 2147483647
2018-03-12 17:23:49 - Context refreshed
2018-03-12 17:23:49 - Found 1 custom documentation plugin(s)
2018-03-12 17:23:49 - Scanning for api listing references
2018-03-12 17:23:49 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:23:49 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:23:49 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: addUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:23:49 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:23:49 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:23:49 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:23:49 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:23:49 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:23:49 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:23:49 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:23:49 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:23:49 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:23:49 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:23:49 - Using a shared selector for servlet write/read
2018-03-12 17:23:49 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:23:49 - Started ProjectCrMbyMwaApplication in 29.186 seconds (JVM running for 1586.474)
2018-03-12 17:25:27 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 17:25:27 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 17:25:27 - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
2018-03-12 17:25:27 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 17:25:27 - Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"])
2018-03-12 17:25:27 - Handling of [org.springframework.http.converter.HttpMessageNotWritableException] resulted in Exception
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:473)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:520)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:409)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:147)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:136)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:177)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-03-12 17:25:27 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"]->org.hibernate.collection.internal.PersistentBag[0]->pl.mwa.representative.Representative["client"]->pl.mwa.client.Client["representatives"])] with root cause
java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:708)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:112)
2018-03-12 17:27:37 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49b55cd9: startup date [Mon Mar 12 17:23:20 CET 2018]; root of context hierarchy
2018-03-12 17:27:37 - Stopping beans in phase 2147483647
2018-03-12 17:27:37 - Stopping beans in phase 0
2018-03-12 17:27:37 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:27:37 - Unregistering JMX-exposed beans
2018-03-12 17:27:37 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:27:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:27:37 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:27:41 - HHH000230: Schema export complete
2018-03-12 17:27:41 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:27:41 - No active profile set, falling back to default profiles: default
2018-03-12 17:27:41 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e679305: startup date [Mon Mar 12 17:27:41 CET 2018]; root of context hierarchy
2018-03-12 17:27:42 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:27:42 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:27:43 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:27:43 - Starting service [Tomcat]
2018-03-12 17:27:43 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:27:43 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:27:43 - Root WebApplicationContext: initialization completed in 1191 ms
2018-03-12 17:27:43 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:27:43 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:27:43 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:27:43 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:27:43 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:27:43 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:27:43 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:27:43 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:27:43 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:27:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:27:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:27:43 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:27:43 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:27:43 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:27:43 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:27:43 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:27:43 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:27:43 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:27:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:27:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:27:43 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:27:43 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:27:43 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:27:43 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:28:05 - HHH000230: Schema export complete
2018-03-12 17:28:05 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:28:06 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:28:08 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2237 ms.
2018-03-12 17:28:08 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:28:08 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:28:08 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:28:08 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:28:08 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:28:08 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:28:08 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:28:08 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:28:08 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:28:08 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:28:08 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:28:08 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:28:08 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:28:08 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:28:08 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:28:08 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:28:08 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:28:08 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:28:08 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:28:08 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:28:08 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:28:08 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:28:08 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:28:08 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:28:08 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:28:08 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:28:08 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:28:08 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:28:08 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:28:08 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:28:08 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:28:08 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:28:08 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:28:08 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:28:08 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:28:08 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:28:08 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:28:08 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:28:08 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:28:08 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:28:08 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:28:08 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:28:08 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:28:08 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:28:08 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:28:08 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:28:08 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:28:08 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:28:08 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:28:08 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:28:08 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:28:08 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:08 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:28:08 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:28:09 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f2fdbfa, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b33c654, org.springframework.security.web.header.HeaderWriterFilter@ea9ae7c, org.springframework.security.web.authentication.logout.LogoutFilter@53dae5ae, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49be2f26, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@363e945b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4d6f0701, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1927e678, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a3e716e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b34609a, org.springframework.security.web.session.SessionManagementFilter@30fb92e0, org.springframework.security.web.access.ExceptionTranslationFilter@147ec113, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@66d45174]
2018-03-12 17:28:09 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:28:09 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:28:09 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:28:09 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:28:09 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45f020ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@16f09c1b, org.springframework.security.web.header.HeaderWriterFilter@54e41267, org.springframework.web.filter.CorsFilter@4aa8b341, org.springframework.security.web.authentication.logout.LogoutFilter@bed04b0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@21ced0f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54325db9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20310a72, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79db8d5f, org.springframework.security.web.session.SessionManagementFilter@7edab5b9, org.springframework.security.web.access.ExceptionTranslationFilter@2f5dabaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8ba8529]
2018-03-12 17:28:09 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e679305: startup date [Mon Mar 12 17:27:41 CET 2018]; root of context hierarchy
2018-03-12 17:28:09 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:28:09 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:28:09 - LiveReload server is running on port 35729
2018-03-12 17:28:09 - Registering beans for JMX exposure on startup
2018-03-12 17:28:09 - Registering beans for JMX exposure on startup
2018-03-12 17:28:09 - Starting beans in phase 0
2018-03-12 17:28:09 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:28:09 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:28:09 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:28:09 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:28:09 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:28:09 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:28:09 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:28:09 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:28:09 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:28:09 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:28:09 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:28:09 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:28:09 - Starting beans in phase 2147483647
2018-03-12 17:28:09 - Context refreshed
2018-03-12 17:28:09 - Found 1 custom documentation plugin(s)
2018-03-12 17:28:09 - Scanning for api listing references
2018-03-12 17:28:09 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:28:09 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:28:09 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:28:09 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:28:10 - Generating unique operation named: addUsingGET_1
2018-03-12 17:28:10 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:28:10 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:28:10 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:28:10 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:28:10 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:28:10 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:28:10 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:28:10 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:28:10 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:28:10 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:28:10 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:28:10 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:28:10 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:28:10 - Using a shared selector for servlet write/read
2018-03-12 17:28:10 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:28:10 - Started ProjectCrMbyMwaApplication in 28.367 seconds (JVM running for 1846.994)
2018-03-12 17:28:35 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 17:28:35 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 17:28:35 - FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
2018-03-12 17:28:35 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 17:28:35 - Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"])
2018-03-12 17:28:35 - Handling of [org.springframework.http.converter.HttpMessageNotWritableException] resulted in Exception
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:473)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:520)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:409)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:147)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:136)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:177)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-03-12 17:28:35 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"]->pl.mwa.address.Address["client"]->pl.mwa.client.Client["address"])] with root cause
java.lang.StackOverflowError: null
	at java.lang.Exception.<init>(Exception.java:66)
	at java.io.IOException.<init>(IOException.java:58)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:25)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:41)
	at com.fasterxml.jackson.databind.JsonMappingException.<init>(JsonMappingException.java:251)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:705)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:704)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
2018-03-12 17:29:37 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e679305: startup date [Mon Mar 12 17:27:41 CET 2018]; root of context hierarchy
2018-03-12 17:29:37 - Stopping beans in phase 2147483647
2018-03-12 17:29:37 - Stopping beans in phase 0
2018-03-12 17:29:37 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:29:37 - Unregistering JMX-exposed beans
2018-03-12 17:29:37 - Unregistering JMX-exposed beans on shutdown
2018-03-12 17:29:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:29:37 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:29:42 - HHH000230: Schema export complete
2018-03-12 17:29:42 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 17:29:42 - No active profile set, falling back to default profiles: default
2018-03-12 17:29:42 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f119346: startup date [Mon Mar 12 17:29:42 CET 2018]; root of context hierarchy
2018-03-12 17:29:43 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 17:29:43 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 17:29:44 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 17:29:44 - Starting service [Tomcat]
2018-03-12 17:29:44 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 17:29:44 - Initializing Spring embedded WebApplicationContext
2018-03-12 17:29:44 - Root WebApplicationContext: initialization completed in 1103 ms
2018-03-12 17:29:44 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 17:29:44 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 17:29:44 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 17:29:44 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 17:29:44 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 17:29:44 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 17:29:44 - HHH000227: Running hbm2ddl schema export
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 17:29:44 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 17:29:44 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 17:29:44 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 17:29:44 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 17:29:44 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 17:29:44 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 17:29:44 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 17:29:44 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 17:29:44 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 17:29:44 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 17:29:44 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 17:29:44 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 17:29:44 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 17:29:44 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 17:29:44 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:29:44 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 17:29:44 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 17:30:08 - HHH000230: Schema export complete
2018-03-12 17:30:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 17:30:08 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 17:30:10 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2606 ms.
2018-03-12 17:30:11 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 17:30:11 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 17:30:11 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 17:30:11 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 17:30:11 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 17:30:11 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 17:30:11 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 17:30:11 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 17:30:11 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 17:30:11 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 17:30:11 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 17:30:11 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 17:30:11 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 17:30:11 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 17:30:11 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 17:30:11 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 17:30:11 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 17:30:11 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 17:30:11 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 17:30:11 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 17:30:11 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 17:30:11 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:30:11 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 17:30:11 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 17:30:11 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 17:30:11 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 17:30:11 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 17:30:11 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:30:11 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 17:30:11 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 17:30:11 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 17:30:11 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 17:30:11 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 17:30:11 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 17:30:11 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 17:30:11 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 17:30:11 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 17:30:11 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 17:30:11 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 17:30:11 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 17:30:11 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 17:30:11 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 17:30:11 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 17:30:11 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 17:30:11 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 17:30:11 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 17:30:11 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 17:30:11 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 17:30:11 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 17:30:11 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 17:30:11 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 17:30:11 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 17:30:11 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 17:30:11 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60f70bdf, org.springframework.security.web.context.SecurityContextPersistenceFilter@2395dcb6, org.springframework.security.web.header.HeaderWriterFilter@17fd0f27, org.springframework.security.web.authentication.logout.LogoutFilter@3b66a4ac, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@491df3cf, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@369bbea5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d9e8ad9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19c3b74b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66381763, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14d8f348, org.springframework.security.web.session.SessionManagementFilter@7f85fec7, org.springframework.security.web.access.ExceptionTranslationFilter@1df4e30c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44261fa6]
2018-03-12 17:30:11 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:30:11 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:30:11 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:30:11 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 17:30:11 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36dd4ed4, org.springframework.security.web.context.SecurityContextPersistenceFilter@21099136, org.springframework.security.web.header.HeaderWriterFilter@695f341c, org.springframework.web.filter.CorsFilter@2b72eb96, org.springframework.security.web.authentication.logout.LogoutFilter@92d29c3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2d9bc183, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33356121, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@235a4c8f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3dfa8eda, org.springframework.security.web.session.SessionManagementFilter@6579f48b, org.springframework.security.web.access.ExceptionTranslationFilter@5ff9baec, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42845c9]
2018-03-12 17:30:11 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f119346: startup date [Mon Mar 12 17:29:42 CET 2018]; root of context hierarchy
2018-03-12 17:30:11 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:30:11 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 17:30:12 - LiveReload server is running on port 35729
2018-03-12 17:30:12 - Registering beans for JMX exposure on startup
2018-03-12 17:30:12 - Registering beans for JMX exposure on startup
2018-03-12 17:30:12 - Starting beans in phase 0
2018-03-12 17:30:12 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 17:30:12 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 17:30:12 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 17:30:12 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 17:30:12 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 17:30:12 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 17:30:12 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 17:30:12 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 17:30:12 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 17:30:12 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 17:30:12 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 17:30:12 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 17:30:12 - Starting beans in phase 2147483647
2018-03-12 17:30:12 - Context refreshed
2018-03-12 17:30:12 - Found 1 custom documentation plugin(s)
2018-03-12 17:30:12 - Scanning for api listing references
2018-03-12 17:30:12 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 17:30:12 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 17:30:12 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: addUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: addUsingPOST_1
2018-03-12 17:30:12 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 17:30:12 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 17:30:12 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 17:30:12 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 17:30:12 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 17:30:12 - Generating unique operation named: getUserUsingGET_1
2018-03-12 17:30:12 - Generating unique operation named: getUserUsingGET_2
2018-03-12 17:30:12 - Generating unique operation named: getUserUsingGET_3
2018-03-12 17:30:12 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 17:30:12 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 17:30:12 - Using a shared selector for servlet write/read
2018-03-12 17:30:12 - Tomcat started on port(s): 8080 (http)
2018-03-12 17:30:12 - Started ProjectCrMbyMwaApplication in 29.744 seconds (JVM running for 1969.419)
2018-03-12 17:33:22 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 17:33:22 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 17:33:22 - FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
2018-03-12 17:33:22 - HHH000397: Using ASTQueryTranslatorFactory
2018-03-12 19:56:29 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f119346: startup date [Mon Mar 12 17:29:42 CET 2018]; root of context hierarchy
2018-03-12 19:56:29 - Stopping beans in phase 2147483647
2018-03-12 19:56:29 - Stopping beans in phase 0
2018-03-12 19:56:29 - Unregistering JMX-exposed beans on shutdown
2018-03-12 19:56:29 - Unregistering JMX-exposed beans
2018-03-12 19:56:29 - Unregistering JMX-exposed beans on shutdown
2018-03-12 19:56:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 19:56:29 - HHH000227: Running hbm2ddl schema export
2018-03-12 19:56:34 - HHH000230: Schema export complete
2018-03-12 19:56:34 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 19:56:34 - No active profile set, falling back to default profiles: default
2018-03-12 19:56:34 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4db02d9c: startup date [Mon Mar 12 19:56:34 CET 2018]; root of context hierarchy
2018-03-12 19:56:35 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 19:56:35 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 19:56:36 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 19:56:36 - Starting service [Tomcat]
2018-03-12 19:56:36 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 19:56:36 - Initializing Spring embedded WebApplicationContext
2018-03-12 19:56:36 - Root WebApplicationContext: initialization completed in 1222 ms
2018-03-12 19:56:36 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 19:56:36 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 19:56:36 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 19:56:36 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 19:56:36 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 19:56:36 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 19:56:36 - HHH000227: Running hbm2ddl schema export
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 19:56:36 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 19:56:36 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 19:56:36 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 19:56:36 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 19:56:36 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 19:56:36 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 19:56:36 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 19:56:36 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 19:56:36 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 19:56:36 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 19:56:36 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 19:56:36 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 19:56:36 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 19:56:36 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 19:56:36 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 19:56:36 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 19:56:36 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 19:57:00 - HHH000230: Schema export complete
2018-03-12 19:57:00 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 19:57:00 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 19:57:03 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2354 ms.
2018-03-12 19:57:03 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 19:57:03 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 19:57:03 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 19:57:03 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 19:57:03 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 19:57:03 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 19:57:03 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 19:57:03 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 19:57:03 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 19:57:03 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 19:57:03 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 19:57:03 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 19:57:03 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 19:57:03 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 19:57:03 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 19:57:03 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 19:57:03 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 19:57:03 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 19:57:03 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 19:57:03 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 19:57:03 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 19:57:03 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 19:57:03 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 19:57:03 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 19:57:03 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 19:57:03 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 19:57:03 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 19:57:03 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 19:57:03 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 19:57:03 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 19:57:03 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 19:57:03 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 19:57:03 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 19:57:03 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 19:57:03 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 19:57:03 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 19:57:03 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 19:57:03 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 19:57:03 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 19:57:03 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 19:57:03 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 19:57:03 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 19:57:03 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 19:57:03 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 19:57:03 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 19:57:03 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 19:57:03 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 19:57:03 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 19:57:03 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 19:57:03 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 19:57:03 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 19:57:03 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:03 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 19:57:03 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 19:57:04 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47c52aa3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f0be377, org.springframework.security.web.header.HeaderWriterFilter@551bc894, org.springframework.security.web.authentication.logout.LogoutFilter@1a9acbfb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5826bafa, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5aca9b8e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4e8f35f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74765788, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f226efa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e4c72ef, org.springframework.security.web.session.SessionManagementFilter@1348f27, org.springframework.security.web.access.ExceptionTranslationFilter@31db59bf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f36c0d4]
2018-03-12 19:57:04 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 19:57:04 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 19:57:04 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 19:57:04 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 19:57:04 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67bc4a4b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b447871, org.springframework.security.web.header.HeaderWriterFilter@7672a636, org.springframework.web.filter.CorsFilter@75f502b6, org.springframework.security.web.authentication.logout.LogoutFilter@12125173, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@152cec6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4eb38628, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d13dade, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26f8c725, org.springframework.security.web.session.SessionManagementFilter@457f582f, org.springframework.security.web.access.ExceptionTranslationFilter@58dba534, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cac623c]
2018-03-12 19:57:04 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4db02d9c: startup date [Mon Mar 12 19:56:34 CET 2018]; root of context hierarchy
2018-03-12 19:57:04 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 19:57:04 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 19:57:04 - LiveReload server is running on port 35729
2018-03-12 19:57:04 - Registering beans for JMX exposure on startup
2018-03-12 19:57:04 - Registering beans for JMX exposure on startup
2018-03-12 19:57:04 - Starting beans in phase 0
2018-03-12 19:57:04 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 19:57:04 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 19:57:04 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 19:57:04 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 19:57:04 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 19:57:04 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 19:57:04 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 19:57:04 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 19:57:04 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 19:57:04 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 19:57:04 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 19:57:04 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 19:57:04 - Starting beans in phase 2147483647
2018-03-12 19:57:04 - Context refreshed
2018-03-12 19:57:04 - Found 1 custom documentation plugin(s)
2018-03-12 19:57:04 - Scanning for api listing references
2018-03-12 19:57:05 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 19:57:05 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 19:57:05 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: addUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: addUsingPOST_1
2018-03-12 19:57:05 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 19:57:05 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 19:57:05 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 19:57:05 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 19:57:05 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 19:57:05 - Generating unique operation named: getUserUsingGET_1
2018-03-12 19:57:05 - Generating unique operation named: getUserUsingGET_2
2018-03-12 19:57:05 - Generating unique operation named: getUserUsingGET_3
2018-03-12 19:57:05 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 19:57:05 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 19:57:05 - Using a shared selector for servlet write/read
2018-03-12 19:57:05 - Tomcat started on port(s): 8080 (http)
2018-03-12 19:57:05 - Started ProjectCrMbyMwaApplication in 30.941 seconds (JVM running for 10782.514)
2018-03-12 20:01:24 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4db02d9c: startup date [Mon Mar 12 19:56:34 CET 2018]; root of context hierarchy
2018-03-12 20:01:24 - Stopping beans in phase 2147483647
2018-03-12 20:01:24 - Stopping beans in phase 0
2018-03-12 20:01:24 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:01:24 - Unregistering JMX-exposed beans
2018-03-12 20:01:24 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:01:24 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:01:24 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:01:28 - HHH000230: Schema export complete
2018-03-12 20:01:28 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 20:01:28 - No active profile set, falling back to default profiles: default
2018-03-12 20:01:28 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6082203d: startup date [Mon Mar 12 20:01:28 CET 2018]; root of context hierarchy
2018-03-12 20:01:29 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 20:01:29 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 20:01:29 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 20:01:29 - Starting service [Tomcat]
2018-03-12 20:01:29 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 20:01:29 - Initializing Spring embedded WebApplicationContext
2018-03-12 20:01:29 - Root WebApplicationContext: initialization completed in 983 ms
2018-03-12 20:01:29 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 20:01:29 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 20:01:29 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 20:01:30 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 20:01:30 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 20:01:30 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 20:01:30 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 20:01:30 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 20:01:30 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 20:01:30 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 20:01:30 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 20:01:30 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 20:01:30 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 20:01:30 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 20:01:30 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 20:01:30 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 20:01:30 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 20:01:30 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 20:01:30 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 20:01:30 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 20:01:30 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 20:01:30 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:01:30 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 20:01:30 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:01:53 - HHH000230: Schema export complete
2018-03-12 20:01:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:01:53 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 20:01:56 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2514 ms.
2018-03-12 20:01:56 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 20:01:56 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 20:01:56 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 20:01:56 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 20:01:56 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 20:01:56 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 20:01:56 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 20:01:56 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 20:01:56 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 20:01:56 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 20:01:56 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 20:01:56 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 20:01:56 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 20:01:56 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 20:01:56 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 20:01:56 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 20:01:56 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 20:01:56 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 20:01:56 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 20:01:56 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 20:01:56 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 20:01:56 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:01:56 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 20:01:56 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 20:01:56 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:01:56 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 20:01:56 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 20:01:56 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:01:56 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:01:56 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 20:01:56 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 20:01:56 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 20:01:56 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 20:01:56 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 20:01:56 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 20:01:56 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 20:01:56 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 20:01:56 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 20:01:56 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 20:01:56 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 20:01:56 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 20:01:56 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 20:01:56 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 20:01:56 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 20:01:56 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 20:01:56 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 20:01:56 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 20:01:56 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 20:01:56 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 20:01:56 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 20:01:56 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:01:56 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 20:01:56 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 20:01:56 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f75af2, org.springframework.security.web.context.SecurityContextPersistenceFilter@38cac7aa, org.springframework.security.web.header.HeaderWriterFilter@16b9feb0, org.springframework.security.web.authentication.logout.LogoutFilter@5407ff3f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@720a4db8, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3a1e9841, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@356742e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bfc4866, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62e96dd7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c4df219, org.springframework.security.web.session.SessionManagementFilter@255fae0d, org.springframework.security.web.access.ExceptionTranslationFilter@705e6d78, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78e8edb8]
2018-03-12 20:01:57 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:01:57 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:01:57 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:01:57 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:01:57 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@742baea, org.springframework.security.web.context.SecurityContextPersistenceFilter@49c50766, org.springframework.security.web.header.HeaderWriterFilter@2a9bdd35, org.springframework.web.filter.CorsFilter@338f20dc, org.springframework.security.web.authentication.logout.LogoutFilter@c037236, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@38c2eff9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28ea7727, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c6c757a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@646e8828, org.springframework.security.web.session.SessionManagementFilter@51a033e2, org.springframework.security.web.access.ExceptionTranslationFilter@4374474e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a8e061e]
2018-03-12 20:01:57 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6082203d: startup date [Mon Mar 12 20:01:28 CET 2018]; root of context hierarchy
2018-03-12 20:01:57 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:01:57 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:01:57 - LiveReload server is running on port 35729
2018-03-12 20:01:57 - Registering beans for JMX exposure on startup
2018-03-12 20:01:57 - Registering beans for JMX exposure on startup
2018-03-12 20:01:57 - Starting beans in phase 0
2018-03-12 20:01:57 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 20:01:57 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 20:01:57 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 20:01:57 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 20:01:57 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 20:01:57 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 20:01:57 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 20:01:57 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 20:01:57 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 20:01:57 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 20:01:57 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 20:01:57 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 20:01:57 - Starting beans in phase 2147483647
2018-03-12 20:01:57 - Context refreshed
2018-03-12 20:01:57 - Found 1 custom documentation plugin(s)
2018-03-12 20:01:57 - Scanning for api listing references
2018-03-12 20:01:57 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 20:01:57 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 20:01:57 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: addUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: addUsingPOST_1
2018-03-12 20:01:57 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 20:01:57 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 20:01:57 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 20:01:57 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 20:01:57 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 20:01:57 - Generating unique operation named: getUserUsingGET_1
2018-03-12 20:01:57 - Generating unique operation named: getUserUsingGET_2
2018-03-12 20:01:57 - Generating unique operation named: getUserUsingGET_3
2018-03-12 20:01:57 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 20:01:57 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 20:01:57 - Using a shared selector for servlet write/read
2018-03-12 20:01:57 - Tomcat started on port(s): 8080 (http)
2018-03-12 20:01:57 - Started ProjectCrMbyMwaApplication in 29.143 seconds (JVM running for 11074.684)
2018-03-12 20:04:29 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6082203d: startup date [Mon Mar 12 20:01:28 CET 2018]; root of context hierarchy
2018-03-12 20:04:29 - Stopping beans in phase 2147483647
2018-03-12 20:04:29 - Stopping beans in phase 0
2018-03-12 20:04:29 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:04:29 - Unregistering JMX-exposed beans
2018-03-12 20:04:29 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:04:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:04:29 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:04:33 - HHH000230: Schema export complete
2018-03-12 20:04:33 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 20:04:33 - No active profile set, falling back to default profiles: default
2018-03-12 20:04:33 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@693c7eff: startup date [Mon Mar 12 20:04:33 CET 2018]; root of context hierarchy
2018-03-12 20:04:34 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 20:04:34 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 20:04:34 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 20:04:34 - Starting service [Tomcat]
2018-03-12 20:04:34 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 20:04:35 - Initializing Spring embedded WebApplicationContext
2018-03-12 20:04:35 - Root WebApplicationContext: initialization completed in 1130 ms
2018-03-12 20:04:35 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 20:04:35 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 20:04:35 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 20:04:35 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 20:04:35 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 20:04:35 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 20:04:35 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 20:04:35 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 20:04:35 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 20:04:35 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 20:04:35 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 20:04:35 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 20:04:35 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 20:04:35 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 20:04:35 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 20:04:35 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 20:04:35 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 20:04:35 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 20:04:35 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 20:04:35 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 20:04:35 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 20:04:35 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:04:35 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 20:04:35 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:04:58 - HHH000230: Schema export complete
2018-03-12 20:04:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:04:58 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 20:05:00 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2563 ms.
2018-03-12 20:05:01 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 20:05:01 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 20:05:01 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 20:05:01 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 20:05:01 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 20:05:01 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 20:05:01 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 20:05:01 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 20:05:01 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 20:05:01 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 20:05:01 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 20:05:01 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 20:05:01 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 20:05:01 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 20:05:01 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 20:05:01 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 20:05:01 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 20:05:01 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 20:05:01 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 20:05:01 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 20:05:01 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 20:05:01 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:05:01 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 20:05:01 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 20:05:01 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:05:01 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 20:05:01 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 20:05:01 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:05:01 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:05:01 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 20:05:01 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 20:05:01 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 20:05:01 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 20:05:01 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 20:05:01 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 20:05:01 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 20:05:01 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 20:05:01 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 20:05:01 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 20:05:01 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 20:05:01 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 20:05:01 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 20:05:01 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 20:05:01 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 20:05:01 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 20:05:01 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 20:05:01 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 20:05:01 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 20:05:01 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 20:05:01 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 20:05:01 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 20:05:01 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 20:05:01 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:05:01 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69960aae, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e0dcf66, org.springframework.security.web.header.HeaderWriterFilter@2a3af863, org.springframework.security.web.authentication.logout.LogoutFilter@5f8cf999, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3973946c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@faa71f5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@75f4ab02, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22bf22a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7fafebec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26cd5ee6, org.springframework.security.web.session.SessionManagementFilter@5c75800c, org.springframework.security.web.access.ExceptionTranslationFilter@465f48ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@243d6527]
2018-03-12 20:05:01 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:05:01 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:05:01 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:05:01 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:05:01 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e54960e, org.springframework.security.web.context.SecurityContextPersistenceFilter@17a7c21, org.springframework.security.web.header.HeaderWriterFilter@87c382e, org.springframework.web.filter.CorsFilter@5f5bda11, org.springframework.security.web.authentication.logout.LogoutFilter@25e5ddd0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5486bfd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d1aa60a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14ce5ccf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ad96400, org.springframework.security.web.session.SessionManagementFilter@2212611f, org.springframework.security.web.access.ExceptionTranslationFilter@aaec652, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@328bc3e9]
2018-03-12 20:05:01 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@693c7eff: startup date [Mon Mar 12 20:04:33 CET 2018]; root of context hierarchy
2018-03-12 20:05:01 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:05:01 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:05:02 - LiveReload server is running on port 35729
2018-03-12 20:05:02 - Registering beans for JMX exposure on startup
2018-03-12 20:05:02 - Registering beans for JMX exposure on startup
2018-03-12 20:05:02 - Starting beans in phase 0
2018-03-12 20:05:02 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 20:05:02 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 20:05:02 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 20:05:02 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 20:05:02 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 20:05:02 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 20:05:02 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 20:05:02 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 20:05:02 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 20:05:02 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 20:05:02 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 20:05:02 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 20:05:02 - Starting beans in phase 2147483647
2018-03-12 20:05:02 - Context refreshed
2018-03-12 20:05:02 - Found 1 custom documentation plugin(s)
2018-03-12 20:05:02 - Scanning for api listing references
2018-03-12 20:05:02 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 20:05:02 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 20:05:02 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: addUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: addUsingPOST_1
2018-03-12 20:05:02 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 20:05:02 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 20:05:02 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 20:05:02 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 20:05:02 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 20:05:02 - Generating unique operation named: getUserUsingGET_1
2018-03-12 20:05:02 - Generating unique operation named: getUserUsingGET_2
2018-03-12 20:05:02 - Generating unique operation named: getUserUsingGET_3
2018-03-12 20:05:02 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 20:05:02 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 20:05:02 - Using a shared selector for servlet write/read
2018-03-12 20:05:02 - Tomcat started on port(s): 8080 (http)
2018-03-12 20:05:02 - Started ProjectCrMbyMwaApplication in 28.852 seconds (JVM running for 11259.418)
2018-03-12 20:08:05 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@693c7eff: startup date [Mon Mar 12 20:04:33 CET 2018]; root of context hierarchy
2018-03-12 20:08:05 - Stopping beans in phase 2147483647
2018-03-12 20:08:05 - Stopping beans in phase 0
2018-03-12 20:08:05 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:08:05 - Unregistering JMX-exposed beans
2018-03-12 20:08:05 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:08:05 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:08:05 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:08:09 - HHH000230: Schema export complete
2018-03-12 20:08:10 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 20:08:10 - No active profile set, falling back to default profiles: default
2018-03-12 20:08:10 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15f86b39: startup date [Mon Mar 12 20:08:10 CET 2018]; root of context hierarchy
2018-03-12 20:08:11 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 20:08:11 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 20:08:12 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 20:08:12 - Starting service [Tomcat]
2018-03-12 20:08:12 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 20:08:12 - Initializing Spring embedded WebApplicationContext
2018-03-12 20:08:12 - Root WebApplicationContext: initialization completed in 1547 ms
2018-03-12 20:08:12 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 20:08:12 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 20:08:12 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 20:08:12 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 20:08:12 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 20:08:12 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 20:08:12 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 20:08:12 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 20:08:12 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 20:08:12 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 20:08:12 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 20:08:12 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 20:08:12 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 20:08:12 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 20:08:12 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 20:08:12 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 20:08:12 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 20:08:12 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 20:08:12 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 20:08:12 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 20:08:12 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 20:08:12 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:08:12 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 20:08:12 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:08:36 - HHH000230: Schema export complete
2018-03-12 20:08:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:08:36 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 20:08:38 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2132 ms.
2018-03-12 20:08:39 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 20:08:39 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 20:08:39 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 20:08:39 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 20:08:39 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 20:08:39 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 20:08:39 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 20:08:39 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 20:08:39 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 20:08:39 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 20:08:39 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 20:08:39 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 20:08:39 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 20:08:39 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 20:08:39 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 20:08:39 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 20:08:39 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 20:08:39 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 20:08:39 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 20:08:39 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 20:08:39 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 20:08:39 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:08:39 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 20:08:39 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 20:08:39 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:08:39 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 20:08:39 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 20:08:39 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:08:39 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:08:39 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 20:08:39 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 20:08:39 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 20:08:39 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 20:08:39 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 20:08:39 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 20:08:39 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 20:08:39 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 20:08:39 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 20:08:39 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 20:08:39 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 20:08:39 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 20:08:39 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 20:08:39 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 20:08:39 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 20:08:39 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 20:08:39 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 20:08:39 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 20:08:39 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 20:08:39 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 20:08:39 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 20:08:39 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 20:08:39 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 20:08:39 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:08:39 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6df695e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@797c7919, org.springframework.security.web.header.HeaderWriterFilter@158e26f5, org.springframework.security.web.authentication.logout.LogoutFilter@33616c28, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@73ac8df2, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@294f6ca9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5897a422, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@524b8efd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3616b3cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@824d4b, org.springframework.security.web.session.SessionManagementFilter@457b57ab, org.springframework.security.web.access.ExceptionTranslationFilter@47fd9c2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11bf94c9]
2018-03-12 20:08:39 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:08:39 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:08:39 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:08:39 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:08:39 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50485e4b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7543b2ff, org.springframework.security.web.header.HeaderWriterFilter@1acaea5, org.springframework.web.filter.CorsFilter@6561be9d, org.springframework.security.web.authentication.logout.LogoutFilter@78f6e490, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3dab7b2c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7921847d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d9cc47a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@204f3aa4, org.springframework.security.web.session.SessionManagementFilter@212894e5, org.springframework.security.web.access.ExceptionTranslationFilter@455936fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ce04b72]
2018-03-12 20:08:39 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15f86b39: startup date [Mon Mar 12 20:08:10 CET 2018]; root of context hierarchy
2018-03-12 20:08:39 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:08:39 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:08:39 - LiveReload server is running on port 35729
2018-03-12 20:08:39 - Registering beans for JMX exposure on startup
2018-03-12 20:08:39 - Registering beans for JMX exposure on startup
2018-03-12 20:08:40 - Starting beans in phase 0
2018-03-12 20:08:40 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 20:08:40 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 20:08:40 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 20:08:40 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 20:08:40 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 20:08:40 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 20:08:40 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 20:08:40 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 20:08:40 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 20:08:40 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 20:08:40 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 20:08:40 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 20:08:40 - Starting beans in phase 2147483647
2018-03-12 20:08:40 - Context refreshed
2018-03-12 20:08:40 - Found 1 custom documentation plugin(s)
2018-03-12 20:08:40 - Scanning for api listing references
2018-03-12 20:08:40 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 20:08:40 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 20:08:40 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: addUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: addUsingPOST_1
2018-03-12 20:08:40 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 20:08:40 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 20:08:40 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 20:08:40 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 20:08:40 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 20:08:40 - Generating unique operation named: getUserUsingGET_1
2018-03-12 20:08:40 - Generating unique operation named: getUserUsingGET_2
2018-03-12 20:08:40 - Generating unique operation named: getUserUsingGET_3
2018-03-12 20:08:40 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 20:08:40 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 20:08:40 - Using a shared selector for servlet write/read
2018-03-12 20:08:40 - Tomcat started on port(s): 8080 (http)
2018-03-12 20:08:40 - Started ProjectCrMbyMwaApplication in 30.011 seconds (JVM running for 11477.26)
2018-03-12 20:24:10 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15f86b39: startup date [Mon Mar 12 20:08:10 CET 2018]; root of context hierarchy
2018-03-12 20:24:10 - Stopping beans in phase 2147483647
2018-03-12 20:24:10 - Stopping beans in phase 0
2018-03-12 20:24:10 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:24:10 - Unregistering JMX-exposed beans
2018-03-12 20:24:10 - Unregistering JMX-exposed beans on shutdown
2018-03-12 20:24:10 - Closing JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:24:10 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:24:14 - HHH000230: Schema export complete
2018-03-12 20:24:14 - Starting ProjectCrMbyMwaApplication on mikolaj-SATELLITE-PRO-U500 with PID 5854 (/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes started by mikolaj in /home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA)
2018-03-12 20:24:14 - No active profile set, falling back to default profiles: default
2018-03-12 20:24:14 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5740c15d: startup date [Mon Mar 12 20:24:14 CET 2018]; root of context hierarchy
2018-03-12 20:24:15 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2018-03-12 20:24:15 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b21e1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-12 20:24:15 - Tomcat initialized with port(s): 8080 (http)
2018-03-12 20:24:15 - Starting service [Tomcat]
2018-03-12 20:24:15 - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-03-12 20:24:15 - Initializing Spring embedded WebApplicationContext
2018-03-12 20:24:15 - Root WebApplicationContext: initialization completed in 1088 ms
2018-03-12 20:24:15 - Mapping filter: 'metricsFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'requestContextFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-03-12 20:24:15 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-03-12 20:24:15 - Mapping servlet: 'dispatcherServlet' to [/]
2018-03-12 20:24:16 - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-03-12 20:24:16 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-03-12 20:24:16 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-03-12 20:24:16 - HHH000227: Running hbm2ddl schema export
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table addresses drop foreign key FKrf3c1s9gxxx0wubkv5maokv9y
2018-03-12 20:24:16 - Table 'projcrmdb1.addresses' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table clients drop foreign key FKexb8v5d45kilinnn9n8n1exxj
2018-03-12 20:24:16 - Table 'projcrmdb1.clients' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table documents drop foreign key FKro98etmfueja5fmbod21w7byi
2018-03-12 20:24:16 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table documents drop foreign key FKkxttj4tp5le2uth212lu49vny
2018-03-12 20:24:16 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table documents drop foreign key FKixuco32pk6hwb9k015vm27b1m
2018-03-12 20:24:16 - Table 'projcrmdb1.documents' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table representatives drop foreign key FKf6vdslo2ou8elpchblu6qm3a4
2018-03-12 20:24:16 - Table 'projcrmdb1.representatives' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table teams drop foreign key FK1unglgeiypxqm05k3sxh7web4
2018-03-12 20:24:16 - Table 'projcrmdb1.teams' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FKgkdwlbkpn9kldrdkxw2on0ii4
2018-03-12 20:24:16 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table teams_members drop foreign key FK4pucaacixk5i6dae9jx6c9hj4
2018-03-12 20:24:16 - Table 'projcrmdb1.teams_members' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FKj6m8fwv7oqv74fcehir1a9ffy
2018-03-12 20:24:16 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table users_roles drop foreign key FK2o0jvgh89lemvvo17cbqvdxaa
2018-03-12 20:24:16 - Table 'projcrmdb1.users_roles' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKf7m7f1gn82xelgot0whfj6hbv
2018-03-12 20:24:16 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKoef4yr5yrsf7oyaewq8k1wl98
2018-03-12 20:24:16 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table workflows drop foreign key FKb59072mdchyffs6xjto7wln1h
2018-03-12 20:24:16 - Table 'projcrmdb1.workflows' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6pcb5ks4mjst30yli6riitisj
2018-03-12 20:24:16 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:24:16 - HHH000389: Unsuccessful: alter table workflows_documents drop foreign key FK6om9dfq9ajw48m5ug01508r9b
2018-03-12 20:24:16 - Table 'projcrmdb1.workflows_documents' doesn't exist
2018-03-12 20:24:39 - HHH000230: Schema export complete
2018-03-12 20:24:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-03-12 20:24:39 - Executing SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql]
2018-03-12 20:24:42 - Executed SQL script from URL [file:/home/mikolaj/Documents/workspace-sts5/ProjectCRMbyMWA/target/classes/data.sql] in 2526 ms.
2018-03-12 20:24:42 - Mapped "{[/addresses],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddresses()
2018-03-12 20:24:42 - Mapped "{[/addresses/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getSearchRequestAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,pl.mwa.client.Client)
2018-03-12 20:24:42 - Mapped "{[/addresses],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.createAddress(pl.mwa.address.CreateAddressDto)
2018-03-12 20:24:42 - Mapped "{[/addresses],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.updateAddress(pl.mwa.address.AddressDto)
2018-03-12 20:24:42 - Mapped "{[/addresses/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.deleteAddress(long)
2018-03-12 20:24:42 - Mapped "{[/addresses/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.address.AddressResource.getAddress(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/client/add],methods=[GET]}" onto public java.lang.String pl.mwa.client.ClientController.add(org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/client/add],methods=[POST]}" onto public java.lang.String pl.mwa.client.ClientController.add(pl.mwa.client.Client,org.springframework.validation.BindingResult)
2018-03-12 20:24:42 - Mapped "{[/clients/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClient(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/clients],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getClients()
2018-03-12 20:24:42 - Mapped "{[/clients],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.createClient(pl.mwa.client.Client)
2018-03-12 20:24:42 - Mapped "{[/clients/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.deleteClient(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/clients],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.updateClient(pl.mwa.client.Client)
2018-03-12 20:24:42 - Mapped "{[/clients/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/clients/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/clients/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.client.ClientResource.exportDBtoFile(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.home()
2018-03-12 20:24:42 - Mapped "{[/add-user],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.addUser()
2018-03-12 20:24:42 - Mapped "{[/admin],methods=[GET]}" onto public java.lang.String pl.mwa.controller.HomeController.admin()
2018-03-12 20:24:42 - Mapped "{[/documents/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocument(long)
2018-03-12 20:24:42 - Mapped "{[/documents/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/documents/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/documents/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.exportDBtoFile(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/documents/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.deleteDocument(long)
2018-03-12 20:24:42 - Mapped "{[/documents],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.updateDocument(pl.mwa.document.DocumentDto)
2018-03-12 20:24:42 - Mapped "{[/documents/status/{documentStatus}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentStatus)
2018-03-12 20:24:42 - Mapped "{[/documents/type/{documentType}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments(pl.mwa.document.DocumentType)
2018-03-12 20:24:42 - Mapped "{[/documents],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getDocuments()
2018-03-12 20:24:42 - Mapped "{[/documents/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.getAdditionalSearchRequest(pl.mwa.document.DocumentType,pl.mwa.document.DocumentStatus,java.lang.Boolean,java.lang.Boolean,pl.mwa.client.Client,pl.mwa.user.User,pl.mwa.user.User)
2018-03-12 20:24:42 - Mapped "{[/documents],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.document.DocumentResource.createDocument(pl.mwa.document.CreateDocumentDto)
2018-03-12 20:24:42 - Mapped "{[/representative/view/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view()
2018-03-12 20:24:42 - Mapped "{[/representative/view/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.view(long,org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/representative/edit/{id}],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(long,org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/representative/edit/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.edit(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:24:42 - Mapped "{[/representative/listall],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.listAll(org.springframework.ui.Model,org.springframework.data.domain.Pageable)
2018-03-12 20:24:42 - Mapped "{[/representative/import],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/representative/import],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getImportFileName(org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/representative/export],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/representative/export],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.getExportFileName(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/representative/add],methods=[GET]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(org.springframework.ui.Model)
2018-03-12 20:24:42 - Mapped "{[/representative/add],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.add(pl.mwa.representative.Representative,org.springframework.validation.BindingResult)
2018-03-12 20:24:42 - Mapped "{[/representative/remove/{id}],methods=[POST]}" onto public java.lang.String pl.mwa.representative.RepresentativeController.remove(long)
2018-03-12 20:24:42 - Mapped "{[/representatives/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/representatives/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/representatives/export],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.exportDBtoFile(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/representatives/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentative(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/representatives],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.getRepresentatives()
2018-03-12 20:24:42 - Mapped "{[/representatives],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.createRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:24:42 - Mapped "{[/representatives/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.deleteRepresentative(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/representatives],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.representative.RepresentativeResource.updateRepresentative(pl.mwa.representative.Representative)
2018-03-12 20:24:42 - Mapped "{[/teams/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeam(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/teams],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.getTeams()
2018-03-12 20:24:42 - Mapped "{[/teams],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.createTeam(pl.mwa.team.Team)
2018-03-12 20:24:42 - Mapped "{[/teams],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.updateTeam(pl.mwa.team.Team)
2018-03-12 20:24:42 - Mapped "{[/teams/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.team.TeamResource.deleteTeam(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/users/import],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getImportListFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/users/import],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.addEntitiesFromCSV(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/users/export],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.exportDBtoFile(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/users/search],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getAdditionalSearchRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,pl.mwa.position.Position)
2018-03-12 20:24:42 - Mapped "{[/users],methods=[POST]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.createUser(pl.mwa.user.CreateUserDto)
2018-03-12 20:24:42 - Mapped "{[/users],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUsers()
2018-03-12 20:24:42 - Mapped "{[/users],methods=[PUT]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.updateUser(pl.mwa.user.UserDto)
2018-03-12 20:24:42 - Mapped "{[/users/role/{role}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.role.Role)
2018-03-12 20:24:42 - Mapped "{[/users/position/{position}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(pl.mwa.position.Position)
2018-03-12 20:24:42 - Mapped "{[/users/{id}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/users/username/{username}],methods=[GET]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.getUser(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/users/{id}],methods=[DELETE]}" onto org.springframework.http.ResponseEntity pl.mwa.user.UserResource.deleteUser(java.lang.Long)
2018-03-12 20:24:42 - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-03-12 20:24:42 - Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-03-12 20:24:42 - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-03-12 20:24:42 - Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-03-12 20:24:42 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-12 20:24:42 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-12 20:24:42 - Mapped "{[/appinfo/configprops || /appinfo/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/mappings || /appinfo/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/info || /appinfo/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/heapdump || /appinfo/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-03-12 20:24:42 - Mapped "{[/appinfo/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/appinfo/env || /appinfo/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/appinfo/metrics || /appinfo/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/trace || /appinfo/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo || /appinfo.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2018-03-12 20:24:42 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/appinfo/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-03-12 20:24:42 - Mapped "{[/appinfo/loggers || /appinfo/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/autoconfig || /appinfo/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/beans || /appinfo/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:42 - Mapped "{[/appinfo/auditevents || /appinfo/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-03-12 20:24:42 - Mapped "{[/appinfo/health || /appinfo/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-03-12 20:24:42 - Mapped "{[/appinfo/docs/],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.browse()
2018-03-12 20:24:42 - Mapped "{[/appinfo/docs],produces=[text/html]}" onto public java.lang.String org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.redirect()
2018-03-12 20:24:42 - Mapped "{[/appinfo/dump || /appinfo/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-03-12 20:24:43 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c2f041f, org.springframework.security.web.context.SecurityContextPersistenceFilter@ec55baf, org.springframework.security.web.header.HeaderWriterFilter@6d141f7e, org.springframework.security.web.authentication.logout.LogoutFilter@3f46796f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@72e79c61, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1b7a418c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5dc686a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ecd615f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73ef7617, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ac6e9aa, org.springframework.security.web.session.SessionManagementFilter@e5cd422, org.springframework.security.web.access.ExceptionTranslationFilter@1e65dbab, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f1121d9]
2018-03-12 20:24:43 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:24:43 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:24:43 - Mapped URL path [/appinfo/docs/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:24:43 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-12 20:24:43 - Creating filter chain: Ant [pattern='/appinfo/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29a05393, org.springframework.security.web.context.SecurityContextPersistenceFilter@2a8579af, org.springframework.security.web.header.HeaderWriterFilter@2345d715, org.springframework.web.filter.CorsFilter@54608bd5, org.springframework.security.web.authentication.logout.LogoutFilter@65015785, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4abd6710, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@720f541b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f7fd830, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fcd86ed, org.springframework.security.web.session.SessionManagementFilter@164184ae, org.springframework.security.web.access.ExceptionTranslationFilter@48820a1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58643eb5]
2018-03-12 20:24:43 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5740c15d: startup date [Mon Mar 12 20:24:14 CET 2018]; root of context hierarchy
2018-03-12 20:24:43 - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:24:43 - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2018-03-12 20:24:43 - LiveReload server is running on port 35729
2018-03-12 20:24:43 - Registering beans for JMX exposure on startup
2018-03-12 20:24:43 - Registering beans for JMX exposure on startup
2018-03-12 20:24:43 - Starting beans in phase 0
2018-03-12 20:24:43 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-03-12 20:24:43 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-03-12 20:24:43 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-03-12 20:24:43 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-03-12 20:24:43 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-03-12 20:24:43 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-03-12 20:24:43 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-03-12 20:24:43 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-03-12 20:24:43 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-03-12 20:24:43 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-03-12 20:24:43 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-03-12 20:24:43 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-03-12 20:24:43 - Starting beans in phase 2147483647
2018-03-12 20:24:43 - Context refreshed
2018-03-12 20:24:43 - Found 1 custom documentation plugin(s)
2018-03-12 20:24:43 - Scanning for api listing references
2018-03-12 20:24:44 - Generating unique operation named: addEntitiesFromCSVUsingPOST_1
2018-03-12 20:24:44 - Generating unique operation named: getDocumentsUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: getDocumentsUsingGET_2
2018-03-12 20:24:44 - Generating unique operation named: getImportListFromCSVUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: addUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: addUsingPOST_1
2018-03-12 20:24:44 - Generating unique operation named: addEntitiesFromCSVUsingPOST_2
2018-03-12 20:24:44 - Generating unique operation named: exportDBtoFileUsingPOST_1
2018-03-12 20:24:44 - Generating unique operation named: getImportListFromCSVUsingGET_2
2018-03-12 20:24:44 - Generating unique operation named: addEntitiesFromCSVUsingPOST_3
2018-03-12 20:24:44 - Generating unique operation named: exportDBtoFileUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: getAdditionalSearchRequestUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: getImportListFromCSVUsingGET_3
2018-03-12 20:24:44 - Generating unique operation named: getUserUsingGET_1
2018-03-12 20:24:44 - Generating unique operation named: getUserUsingGET_2
2018-03-12 20:24:44 - Generating unique operation named: getUserUsingGET_3
2018-03-12 20:24:44 - Initializing ProtocolHandler ["http-nio-8080"]
2018-03-12 20:24:44 - Starting ProtocolHandler ["http-nio-8080"]
2018-03-12 20:24:44 - Using a shared selector for servlet write/read
2018-03-12 20:24:44 - Tomcat started on port(s): 8080 (http)
2018-03-12 20:24:44 - Started ProjectCrMbyMwaApplication in 29.835 seconds (JVM running for 12441.227)
2018-03-12 20:26:51 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-12 20:26:51 - FrameworkServlet 'dispatcherServlet': initialization started
2018-03-12 20:26:51 - FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
2018-03-12 20:27:12 - HHH000397: Using ASTQueryTranslatorFactory
